{"version":3,"sources":["utils/http.js","components/main-pages/home-comps/LoginSignup.js","utils/breakpoints.js","utils/If.js","utils/avatars.js","components/main-pages/PageHome.js","components/main-pages/dashboard-comps/Nav.js","components/main-pages/dashboard-comps/UserAvatar.js","components/main-pages/dashboard-comps/settings/SettingsChatroom.js","components/main-pages/dashboard-comps/settings/SettingsCol2.js","components/main-pages/dashboard-comps/settings/SettingsCol3.js","components/main-pages/dashboard-comps/NavSettings.js","components/main-pages/dashboard-comps/home/HomeCol2.js","utils/getDate&Time.js","components/main-pages/dashboard-comps/home/HomeCol3ChatSettings.js","components/main-pages/dashboard-comps/home/HomeCol3Chat.js","components/main-pages/dashboard-comps/home/HomeCol3CreateChatroom.js","components/main-pages/dashboard-comps/NavHome.js","components/main-pages/PageDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["api_address","get","endpoint","signal","a","fetch","method","headers","authorization","localStorage","getItem","then","res","json","post","data","console","log","body","JSON","stringify","LoginSignup","loginSignup","setLoginSignup","usernameInput","passwordInput","theme","avatar","setResponseMessage","history","useHistory","loginSingupTexts","submitFetch","btnState","endPoint","payload","name","password","avatarChange","themeChange","response","success","setItem","push","message","className","type","onClick","breakpoints","If","condition","children","StyledDiv","styled","props","img","PageHome","avatars","useState","window","innerWidth","W","setW","setAvatar","avatarSwitch","setAvatarSwitch","setTheme","setUsernameInput","setPasswordInput","responseMessage","useEffect","changeW","addEventListener","removeEventListener","Container","Row","Col","lg","span","order","md","xs","htmlFor","id","placeholder","onChange","e","target","value","hidden","defaultValue","map","Nav","setNavState","navState","xmlns","width","height","viewBox","transform","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","removeItem","x2","UserAvatar","user","SettingsChatroom","ws","room","activeChatroom","setChatroomUpdated","setUpdateMessage","loading","setLoading","roomName","setRoomName","roomMembers","setRoomMembers","newRoomMembers","setNewRoomMembers","roomAdmins","setRoomAdmins","roomTheme","setRoomTheme","notRoomMembers","setNotRoomMembers","searchUsersInput","setSearchUsersInput","fetchAllUsers","activeRoom","filter","u","members","includes","_id","sort","b","admins","fetchUpdateChatroom","roomId","newRoomAdmins","forEach","m","newRoomTheme","newRoomName","fetchDeleteChatroom","send","detail","chatroomId","fetchLeaveChatroom","abortController","AbortController","abort","MemberChatroomSettings","length","i","newArr","me","newArr2","newArr3","undefined","prev","AdminChatroomSettings","classList","add","StyledSection","SettingsCol2","userChatrooms","setActiveChatroom","searchChatrooms","setSearchChatrooms","updateMessage","setTimeout","onInput","SettingsCol3","setUserUpdated","setName","newPassword","setNewPassword","currentPassword","setCurrentPassword","fetchUpdateUser","class","NavSettings","StyledSpan","color","HomeCol2","notUserChatrooms","setHomeCol3State","chatroomLastMessage","chatroomUnreadMsgs","usersOnline","setMobileCol2Chatrooms","showOtherChatrooms","setShowOtherChatrooms","showOnlineUsers","setShowOnlineUsers","document","querySelector","style","offsetHeight","checked","joinable","Chatroom","lastMessage","setLastMessage","roomUnreadMsgs","setRoomUnreadMsgs","nollifyUnreadMsgs","setNollifyUnreadMsgs","fetchLastMessage","fetchGetChatroomUnread","fetchStarmarkChatroom","fetchUpdateChatroomUnread","userId","nollify","unread","fetchJoinChatroom","chatroom","starmarked","toggle","text","time","getDateAndTime","date","Date","toLocaleDateString","split","year","at","day","month","timeSplitted","toLocaleTimeString","HomeCol3ChatSettings","setChatState","HomeCol3Chat","chatroomMessages","setChatroomMessages","newReaction","setNewReaction","membersTyping","chatroomUsers","setChatroomUsers","isTyping","setIsTyping","msgAva","setMsgAva","inputMessage","setInputMessage","chatState","showGoBotArrow","setShowGoBotArrow","fetchChatroomUsersAndMessages","fetchChatroomMessages","res2","filterMsgsAva","sendMessage","readyState","sender","reactions","msgs","arr","msgType","onKeyPress","key","handleKeyPress","onScroll","bottom","scrollHeight","scrollTop","clientHeight","handleScroll","userAva","userName","Message","showMessageDetails","setShowMessageDetails","mesReactions","setMesReactions","showReactions","setShowReactions","fetchPostMsgReaction","reacter","reaction","messageId","fetchDeleteMsgReaction","reactionId","r","some","Reactions","HomeCol3CreateChatroom","homeCol3State","setNewRoomName","setNewRoomTheme","setNewRoomAdmins","createMessage","setCreateMessage","fetchCreateChatroom","NavHome","setUsersOnline","setChatroomLastMessage","setChatroomUnreadMsgs","setMembersTyping","mobileCol2Chatrooms","onmessage","parse","users","ch","PageDashboard","setWs","userUpdated","chatroomUpdated","setUser","setUserChatrooms","setNotUserChatrooms","fetchUserAndChatrooms","userID","chat","chatA","chatB","fetchUser","fetchChatrooms","WebSocket","ws_address","onopen","onclose","close","requireLogin","to","from","next","meta","auth","redirect","Loading","NotFound","App","guards","error","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.94b4c390.chunk.js","sourcesContent":["// export const api_address = \"http://localhost:5002\";\r\n// export const client_address = \"http://localhost:3000\";\r\n// export const ws_address = \"ws://localhost:5002\";\r\nexport const ws_address = \"wss://chatwskul.herokuapp.com\";\r\nexport const api_address = \"https://chatwskul.herokuapp.com\";\r\nexport const client_address = \"https://chatwskul.herokuapp.com\";\r\n// export const api_address = \"192.168.222.178:5002\";\r\n// export const client_address = \"192.168.222.178:3000\";\r\n\r\nexport const get = async (endpoint, signal) => {\r\n  return await fetch(api_address + endpoint, {\r\n    method: \"GET\",\r\n    signal: signal,\r\n    headers: {\r\n      authorization: localStorage.getItem(\"token\") || \"\",\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const post = async (endpoint, data) => {\r\n  console.log(data);\r\n  return await fetch(api_address + endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      authorization: localStorage.getItem(\"token\") || \"\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  }).then((res) => res.json());\r\n};\r\n","import { post } from \"../../../utils/http\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useState } from \"react\";\r\n\r\nexport const LoginSignup = ({\r\n  loginSignup,\r\n  setLoginSignup,\r\n  usernameInput,\r\n  passwordInput,\r\n  theme,\r\n  avatar,\r\n  setResponseMessage,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  let loginSingupTexts =\r\n    loginSignup === \"login\"\r\n      ? [\"Log in\", \"Dont have account? \", \"Sign up\"]\r\n      : [\"Sign up\", \"By singing up you agree osvosv \", \"terms and conditions\"];\r\n\r\n  const signupOrTermsCond = () => {\r\n    loginSignup === \"login\"\r\n      ? setLoginSignup(\"signup\")\r\n      : console.log(\"terms and condition page\");\r\n  };\r\n\r\n  const submitFetch = async (btnState) => {\r\n    let endPoint = \"/user-login\";\r\n\r\n    if (btnState !== \"login\") {\r\n      endPoint = \"/create-user\";\r\n    }\r\n\r\n    let payload = {\r\n      name: usernameInput,\r\n      password: passwordInput,\r\n      avatar: avatar[0],\r\n      avatarChange: avatar[1],\r\n      theme: theme[0],\r\n      themeChange: theme[1],\r\n    };\r\n\r\n    const response = await post(endPoint, payload);\r\n\r\n    if (response.success) {\r\n      localStorage.setItem(\"token\", response.data);\r\n      return history.push(\"/dashboard\");\r\n    } else {\r\n      setResponseMessage(response.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"flex center login-con-logsign-con\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"center login-btn\"\r\n        onClick={() => submitFetch(loginSignup)}\r\n      >\r\n        {loginSingupTexts[0]}\r\n      </button>\r\n      <p className=\"center login-con-noaccount\">\r\n        {loginSingupTexts[1]}\r\n        <span onClick={() => signupOrTermsCond()}>{loginSingupTexts[2]}</span>\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n","export const breakpoints = {\r\n  large: 992,\r\n  // BS lg = >= 992\r\n  medium: 768,\r\n  // BS md = >= 768\r\n  small: 576,\r\n  // BS xs = < 576\r\n\r\n  // mobile = xs\r\n  // web = sm\r\n};\r\n","export const If = ({ condition, children }) => {\r\n  return <>{condition && children}</>;\r\n};\r\n","export default [\r\n  \"Asset-25.png\",\r\n  \"avatar-prel.png\",\r\n  \"Asset-5.png\",\r\n  \"Asset-9.png\",\r\n  \"Asset-10.png\",\r\n  \"Asset-11.png\",\r\n  \"Asset-12.png\",\r\n  \"Asset-13.png\",\r\n  \"Asset-14.png\",\r\n  \"Asset-15.png\",\r\n  \"Asset-16.png\",\r\n  \"Asset-17.png\",\r\n  \"Asset-18.png\",\r\n  \"Asset-19.png\",\r\n  \"Asset-20.png\",\r\n  \"Asset-21.png\",\r\n  \"Asset-23.png\",\r\n  \"Asset-24.png\",\r\n];\r\n","import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { LoginSignup } from \"./home-comps/LoginSignup\";\r\n\r\nimport { breakpoints } from \"../../utils/breakpoints\";\r\nimport { api_address, post } from \"../../utils/http\";\r\nimport { If } from \"../../utils/If\";\r\n\r\nimport avatars from \"../../utils/avatars\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDiv = styled(\"div\")`\r\n  background-image: url(../avatars/${(props) => props.img});\r\n`;\r\nexport const PageHome = () => {\r\n  console.log(avatars);\r\n  const [W, setW] = useState(window.innerWidth);\r\n  const [loginSignup, setLoginSignup] = useState(\"login\");\r\n  const [avatar, setAvatar] = useState([avatars[0], 0]);\r\n  const [avatarSwitch, setAvatarSwitch] = useState(false);\r\n  const [theme, setTheme] = useState([0, 0]);\r\n\r\n  const [usernameInput, setUsernameInput] = useState(\"\");\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n\r\n  const [responseMessage, setResponseMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let changeW = window.addEventListener(\"resize\", () =>\r\n      setW(window.innerWidth)\r\n    );\r\n    return window.removeEventListener(\"resize\", changeW);\r\n  }, [W]);\r\n\r\n  return (\r\n    <Container\r\n      className={`page page-home ${\r\n        W < breakpoints.medium ? \"page-home-mobile\" : \"page-home-desktop\"\r\n      }`}\r\n    >\r\n      <Container className=\"flex login-con\">\r\n        <h3>{loginSignup === \"login\" ? \"Welcome\" : \"Create account\"}</h3>\r\n\r\n        <Container className=\"height100\">\r\n          <Row className=\"height100\">\r\n            <Col\r\n              lg={{ span: avatarSwitch ? 5 : 8, order: 1 }}\r\n              md={{ span: avatarSwitch ? 5 : 8, order: 1 }}\r\n              xs={{ span: 12, order: 1 }}\r\n              className=\"col-nopad home-con-col1\"\r\n            >\r\n              <section className=\"flex height100 login-con-form-btn\">\r\n                <div className=\"flex login-con-form-userpass\">\r\n                  <label htmlFor=\"name\">username:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"haakon1337\"\r\n                    onChange={(e) => setUsernameInput(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"password\">password:</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"pAssword123!\"\r\n                    onChange={(e) => setPasswordInput(e.target.value)}\r\n                  />\r\n                  <input type=\"number\" name=\"theme\" value={theme[0]} hidden />\r\n                  <input type=\"number\" name=\"avatar\" value={avatar[0]} hidden />\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"avatarChange\"\r\n                    defaultValue={avatar[1]}\r\n                    hidden\r\n                  />\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"themeChange\"\r\n                    defaultValue={theme[1]}\r\n                    hidden\r\n                  />\r\n                </div>\r\n\r\n                <If condition={responseMessage !== null}>\r\n                  <div>{responseMessage}</div>\r\n                </If>\r\n\r\n                <If condition={W > breakpoints.medium}>\r\n                  <LoginSignup\r\n                    loginSignup={loginSignup}\r\n                    setLoginSignup={setLoginSignup}\r\n                    usernameInput={usernameInput}\r\n                    passwordInput={passwordInput}\r\n                    theme={theme}\r\n                    avatar={avatar}\r\n                    setResponseMessage={setResponseMessage}\r\n                  />\r\n                </If>\r\n              </section>\r\n            </Col>\r\n            <Col\r\n              lg={{ span: avatarSwitch ? 3 : 4, order: 2 }}\r\n              md={{ span: avatarSwitch ? 3 : 4, order: 2 }}\r\n              xs={{ span: 12, order: 2 }}\r\n              className={`home-con-col2 ${\r\n                W < breakpoints.medium ? \"flex\" : \"\"\r\n              } col-nopad`}\r\n            >\r\n              <Col\r\n                lg={{ span: 12, order: 1 }}\r\n                md={{ span: 12, order: 1 }}\r\n                xs={{ span: 6, order: 1 }}\r\n                className=\"login-con-avatar-con col-nopad\"\r\n              >\r\n                <StyledDiv\r\n                  img={avatar[0]}\r\n                  className=\"chosen-avatar\"\r\n                ></StyledDiv>\r\n                <button\r\n                  className=\"change-avatar-btn\"\r\n                  onClick={() => setAvatarSwitch(!avatarSwitch)}\r\n                >\r\n                  change\r\n                </button>\r\n              </Col>\r\n              <Col\r\n                lg={{ span: 12, order: 2 }}\r\n                md={{ span: 12, order: 2 }}\r\n                xs={{ span: 6, order: 2 }}\r\n                className=\"login-con-theme-con col-nopad\"\r\n              >\r\n                <button\r\n                  className=\"olf-theme-btn\"\r\n                  onClick={() => setTheme([0, 1])}\r\n                >\r\n                  olf theme\r\n                </button>\r\n                <button\r\n                  className=\"poke-theme-btn\"\r\n                  onClick={() => setTheme([1, 1])}\r\n                >\r\n                  poke theme\r\n                </button>\r\n              </Col>\r\n            </Col>\r\n            <If condition={avatarSwitch}>\r\n              <Col\r\n                lg={{ span: 4, order: 3 }}\r\n                md={{ span: 4, order: 3 }}\r\n                xs={{ span: 12, order: 3 }}\r\n                className=\"flex col-nopad home-con-col3\"\r\n              >\r\n                {avatars.map((a) => {\r\n                  console.log(avatar[0] === a);\r\n                  return (\r\n                    <StyledDiv\r\n                      img={a}\r\n                      className={`avatars ${\r\n                        avatar[0] === a ? \"chosen-avatar\" : \"\"\r\n                      }`}\r\n                      onClick={() => setAvatar([a, 1])}\r\n                    ></StyledDiv>\r\n                  );\r\n                })}\r\n              </Col>\r\n            </If>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n\r\n      <If condition={W < breakpoints.medium}>\r\n        <LoginSignup\r\n          loginSignup={loginSignup}\r\n          setLoginSignup={setLoginSignup}\r\n          usernameInput={usernameInput}\r\n          passwordInput={passwordInput}\r\n          theme={theme}\r\n          avatar={avatar}\r\n          setResponseMessage={setResponseMessage}\r\n        />\r\n      </If>\r\n    </Container>\r\n  );\r\n};\r\n","import { useHistory } from \"react-router\";\r\n\r\nexport const Nav = ({ setNavState, navState }) => {\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/\", null);\r\n  };\r\n  return (\r\n    <section className=\"flex col1-nav-con\">\r\n      <div\r\n        className=\"flex nav-con-li\"\r\n        onClick={async () => {\r\n          setNavState(\"home\");\r\n        }}\r\n      >\r\n        <span>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"31.827\"\r\n            height=\"28.927\"\r\n            viewBox=\"0 0 31.827 28.927\"\r\n          >\r\n            <g\r\n              id=\"Component_3_1\"\r\n              data-name=\"Component 3 – 1\"\r\n              transform=\"translate(1.414 1)\"\r\n            >\r\n              <g id=\"home-outline\" transform=\"translate(0 0)\">\r\n                <path\r\n                  id=\"Path_1\"\r\n                  data-name=\"Path 1\"\r\n                  d=\"M80,212v15.028a1.03,1.03,0,0,0,1.04,1.019h6.242v-8.66a1.545,1.545,0,0,1,1.56-1.528h5.2a1.545,1.545,0,0,1,1.56,1.528v8.66h6.242a1.03,1.03,0,0,0,1.04-1.019V212\"\r\n                  transform=\"translate(-76.944 -201.119)\"\r\n                  fill=\"none\"\r\n                  stroke=\"#fff\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                />\r\n                <path\r\n                  id=\"Path_2\"\r\n                  data-name=\"Path 2\"\r\n                  d=\"M61,61.261,47.2,48.271a1.107,1.107,0,0,0-1.41,0L32,61.261\"\r\n                  transform=\"translate(-32 -48.017)\"\r\n                  fill=\"none\"\r\n                  stroke=\"#fff\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                />\r\n                <path\r\n                  id=\"Path_3\"\r\n                  data-name=\"Path 3\"\r\n                  d=\"M355.056,71.323V64H352v4.394\"\r\n                  transform=\"translate(-331.245 -62.982)\"\r\n                  fill=\"none\"\r\n                  stroke=\"#fff\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                />\r\n              </g>\r\n            </g>\r\n          </svg>\r\n        </span>\r\n        <div className={`nav-con-home ${navState === \"home\" ? \"active\" : \"\"}`}>\r\n          HOME\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"flex nav-con-li\"\r\n        onClick={() => {\r\n          setNavState(\"settings\");\r\n        }}\r\n      >\r\n        <span>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"31.116\"\r\n            height=\"31.834\"\r\n            viewBox=\"0 0 31.116 31.834\"\r\n          >\r\n            <g\r\n              id=\"Component_4_1\"\r\n              data-name=\"Component 4 – 1\"\r\n              transform=\"translate(1.058 1)\"\r\n            >\r\n              <g id=\"settings-outline\">\r\n                <path\r\n                  id=\"settings-outline-2\"\r\n                  data-name=\"settings-outline\"\r\n                  d=\"M62.924,52.478a4.461,4.461,0,1,0,4,4A4.461,4.461,0,0,0,62.924,52.478Zm10.742,4.44a10.758,10.758,0,0,1-.107,1.449l3.151,2.472a.754.754,0,0,1,.171.958L73.9,66.955a.754.754,0,0,1-.916.32l-3.13-1.26a1.123,1.123,0,0,0-1.057.122,11.465,11.465,0,0,1-1.5.874,1.111,1.111,0,0,0-.615.846L66.211,71.2a.772.772,0,0,1-.744.639H59.5a.774.774,0,0,1-.745-.618l-.468-3.333a1.12,1.12,0,0,0-.627-.852,10.824,10.824,0,0,1-1.5-.876,1.115,1.115,0,0,0-1.053-.119L51.985,67.3a.754.754,0,0,1-.916-.319l-2.981-5.158a.753.753,0,0,1,.171-.958l2.663-2.091a1.119,1.119,0,0,0,.418-.981c-.025-.291-.04-.581-.04-.871s.015-.576.04-.861a1.115,1.115,0,0,0-.423-.972l-2.662-2.091a.754.754,0,0,1-.165-.954l2.981-5.158a.754.754,0,0,1,.916-.32l3.13,1.26a1.123,1.123,0,0,0,1.057-.122,11.465,11.465,0,0,1,1.5-.874,1.111,1.111,0,0,0,.615-.846l.469-3.338A.772.772,0,0,1,59.5,42h5.963a.774.774,0,0,1,.745.618l.468,3.333a1.12,1.12,0,0,0,.627.852,10.826,10.826,0,0,1,1.5.876,1.115,1.115,0,0,0,1.053.119l3.129-1.26a.754.754,0,0,1,.916.319l2.981,5.158a.753.753,0,0,1-.171.958l-2.663,2.091a1.119,1.119,0,0,0-.422.981C73.65,56.337,73.665,56.627,73.665,56.917Z\"\r\n                  transform=\"translate(-47.985 -42)\"\r\n                  fill=\"none\"\r\n                  stroke=\"#fff\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                />\r\n              </g>\r\n            </g>\r\n          </svg>\r\n        </span>\r\n        <div\r\n          className={`nav-con-settings ${\r\n            navState === \"settings\" ? \"active\" : \"\"\r\n          }`}\r\n        >\r\n          SETTINGS\r\n        </div>\r\n      </div>\r\n      <div onClick={logout} className=\"flex nav-con-li\">\r\n        <span>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"31\"\r\n            height=\"26.167\"\r\n            viewBox=\"0 0 31 26.167\"\r\n          >\r\n            <g id=\"log-out-outline\" transform=\"translate(1 1)\">\r\n              <path\r\n                id=\"Path_11\"\r\n                data-name=\"Path 11\"\r\n                d=\"M81.969,114.125v3.021a3.008,3.008,0,0,1-2.995,3.021H66.995A3.008,3.008,0,0,1,64,117.146V99.021A3.008,3.008,0,0,1,66.995,96h11.38c1.654,0,3.594,1.353,3.594,3.021v3.021\"\r\n                transform=\"translate(-64 -96)\"\r\n                fill=\"none\"\r\n                stroke=\"#fff\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n              />\r\n              <path\r\n                id=\"Path_12\"\r\n                data-name=\"Path 12\"\r\n                d=\"M368,187.979l5.99-5.99L368,176\"\r\n                transform=\"translate(-344.99 -169.906)\"\r\n                fill=\"none\"\r\n                stroke=\"#fff\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n              />\r\n              <line\r\n                id=\"Line_1\"\r\n                data-name=\"Line 1\"\r\n                x2=\"19\"\r\n                transform=\"translate(8.625 12.083)\"\r\n                fill=\"none\"\r\n                stroke=\"#fff\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n              />\r\n            </g>\r\n          </svg>\r\n        </span>\r\n        <div>LOG OUT</div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledDiv = styled(\"div\")`\r\n  background-image: url(../avatars/${(props) => props.img});\r\n`;\r\n\r\nexport const UserAvatar = ({ user }) => {\r\n  return (\r\n    <section className=\"flex col1-user-con\">\r\n      {/* <div className=\"onlinestatus-con\">\r\n        <div className=\"user-con-onlinestatus\"></div>\r\n      </div> */}\r\n\r\n      <StyledDiv img={user.avatar} className=\"height100 user-con-avatar\">\r\n        <div className=\"onlinestatus-con\">\r\n          <div className=\"user-con-onlinestatus\"></div>\r\n        </div>\r\n      </StyledDiv>\r\n\r\n      <div className=\" flex user-con-user-name\">{user.name}</div>\r\n    </section>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { If } from \"../../../../utils/If\";\r\nimport { get, post } from \"../../../../utils/http\";\r\n\r\nexport const SettingsChatroom = ({\r\n  ws,\r\n  user,\r\n  room,\r\n  activeChatroom,\r\n  setChatroomUpdated,\r\n  setUpdateMessage,\r\n}) => {\r\n  // states\r\n  const [loading, setLoading] = useState(true);\r\n  const [roomName, setRoomName] = useState(null);\r\n  const [roomMembers, setRoomMembers] = useState([]);\r\n\r\n  const [newRoomMembers, setNewRoomMembers] = useState([]);\r\n\r\n  const [roomAdmins, setRoomAdmins] = useState([]);\r\n  const [roomTheme, setRoomTheme] = useState(null);\r\n  const [notRoomMembers, setNotRoomMembers] = useState([]);\r\n  const [searchUsersInput, setSearchUsersInput] = useState(\"\");\r\n\r\n  // fetches\r\n  const fetchAllUsers = async (signal, activeRoom) => {\r\n    let res = await get(`/protected/get-all-users`, signal);\r\n    setRoomMembers(\r\n      res.data\r\n        .filter((u) => activeRoom.members.includes(u._id))\r\n        .sort((a, b) => {\r\n          return (\r\n            activeRoom.admins.includes(b._id) -\r\n            activeRoom.admins.includes(a._id)\r\n          );\r\n        })\r\n    );\r\n    setNotRoomMembers(\r\n      res.data.filter((u) => !activeRoom.members.includes(u._id))\r\n    );\r\n    setRoomAdmins(res.data.filter((u) => activeRoom.admins.includes(u._id)));\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchUpdateChatroom = async (roomId) => {\r\n    let newRoomAdmins = [];\r\n    roomAdmins.forEach((a) => {\r\n      newRoomAdmins.push(a._id);\r\n    });\r\n    let newRoomMembers = [];\r\n    roomMembers.forEach((m) => newRoomMembers.push(m._id));\r\n    let newRoomTheme;\r\n    if (roomTheme === null) {\r\n      newRoomTheme = activeChatroom.theme;\r\n    } else {\r\n      newRoomTheme = roomTheme;\r\n    }\r\n    let newRoomName;\r\n    if (roomName === null) {\r\n      newRoomName = activeChatroom.name;\r\n    } else {\r\n      newRoomName = roomName;\r\n    }\r\n\r\n    let res = await post(`/protected/update-chatroom/` + roomId, {\r\n      name: newRoomName,\r\n      admins: newRoomAdmins,\r\n      members: newRoomMembers,\r\n      theme: newRoomTheme,\r\n    });\r\n    setChatroomUpdated(true);\r\n    setUpdateMessage([roomId, res.message]);\r\n  };\r\n\r\n  const fetchDeleteChatroom = async (signal, roomId) => {\r\n    let res = await get(`/protected/delete-chatroom/` + roomId, signal);\r\n    setChatroomUpdated(true);\r\n    ws.send(\r\n      JSON.stringify({\r\n        type: \"chatroomDelete\",\r\n        detail: \"chatroomDelete\",\r\n        chatroomId: roomId,\r\n      })\r\n    );\r\n  };\r\n\r\n  const fetchLeaveChatroom = async (signal, roomId) => {\r\n    let res = await post(\r\n      `/protected/leave-chatroom/` + roomId + \"/\" + user._id,\r\n      signal\r\n    );\r\n    setChatroomUpdated(true);\r\n    ws.send(\r\n      JSON.stringify({\r\n        type: \"chatroomUpdate\",\r\n        detail: \"userLeft\",\r\n        chatroomId: roomId,\r\n        user: user,\r\n      })\r\n    );\r\n  };\r\n\r\n  // useEffects\r\n  useEffect(async () => {\r\n    const abortController = new AbortController();\r\n    if (activeChatroom)\r\n      await fetchAllUsers(abortController.signal, activeChatroom);\r\n    return () => abortController.abort();\r\n  }, [activeChatroom]);\r\n\r\n  if (loading) {\r\n    return <h2 className=\"\">Loading...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <If condition={room.admins.includes(user._id)}>\r\n        <AdminChatroomSettings\r\n          user={user}\r\n          room={room}\r\n          roomAdmins={roomAdmins}\r\n          setRoomAdmins={setRoomAdmins}\r\n          roomName={roomName}\r\n          setRoomName={setRoomName}\r\n          roomMembers={roomMembers}\r\n          setRoomMembers={setRoomMembers}\r\n          notRoomMembers={notRoomMembers}\r\n          setNotRoomMembers={setNotRoomMembers}\r\n          roomTheme={roomTheme}\r\n          setRoomTheme={setRoomTheme}\r\n          searchUsersInput={searchUsersInput}\r\n          setSearchUsersInput={setSearchUsersInput}\r\n          fetchDeleteChatroom={fetchDeleteChatroom}\r\n          fetchUpdateChatroom={fetchUpdateChatroom}\r\n        />\r\n      </If>\r\n      <If condition={!room.admins.includes(user._id)}>\r\n        <MemberChatroomSettings\r\n          user={user}\r\n          room={room}\r\n          roomAdmins={roomAdmins}\r\n          roomName={roomName}\r\n          roomMembers={roomMembers}\r\n          setRoomMembers={setRoomMembers}\r\n          notRoomMembers={notRoomMembers}\r\n          setNotRoomMembers={setNotRoomMembers}\r\n          roomTheme={roomTheme}\r\n          setRoomTheme={setRoomTheme}\r\n          searchUsersInput={searchUsersInput}\r\n          setSearchUsersInput={setSearchUsersInput}\r\n          fetchLeaveChatroom={fetchLeaveChatroom}\r\n          fetchUpdateChatroom={fetchUpdateChatroom}\r\n          newRoomMembers={newRoomMembers}\r\n          setNewRoomMembers={setNewRoomMembers}\r\n          // ws={ws}\r\n        />\r\n      </If>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MemberChatroomSettings = ({\r\n  room,\r\n  roomAdmins,\r\n  roomMembers,\r\n  setRoomMembers,\r\n  notRoomMembers,\r\n  setNotRoomMembers,\r\n  roomTheme,\r\n  setRoomTheme,\r\n  searchUsersInput,\r\n  setSearchUsersInput,\r\n  fetchLeaveChatroom,\r\n  fetchUpdateChatroom,\r\n  newRoomMembers,\r\n  setNewRoomMembers,\r\n  // ws,\r\n}) => {\r\n  return (\r\n    <>\r\n      <p className=\"chat-settings-members\">{room.members.length} members</p>\r\n      <div className=\"chat-settings-text\">Members:</div>\r\n      <div className=\"flex chat-settings-members-container\">\r\n        {roomMembers.map((m, i) => {\r\n          return (\r\n            <div>\r\n              <div className=\"flex chat-settings-current-members\">\r\n                <div className=\"current-members\">{m.name}</div>\r\n                <If condition={roomAdmins.includes(m)}>\r\n                  <span>A</span>\r\n                </If>\r\n              </div>\r\n              <If condition={newRoomMembers.includes(m)}>\r\n                <div\r\n                  className=\"chat-settings-kick\"\r\n                  onClick={() => {\r\n                    let newArr = roomMembers.filter((me) => me._id !== m._id);\r\n                    setRoomMembers(newArr);\r\n                    let newArr2 = notRoomMembers;\r\n                    if (!newArr2.includes(m)) newArr2.push(m);\r\n                    setNotRoomMembers(newArr2);\r\n                    let newArr3 = newRoomMembers.filter(\r\n                      (me) => me._id !== m._id\r\n                    );\r\n                    setNewRoomMembers(newArr3);\r\n                  }}\r\n                >\r\n                  X\r\n                </div>\r\n              </If>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"flex\">\r\n        <label className=\"chat-settings-text\">add members:</label>\r\n        <input\r\n          className=\"chat-settings-input-text\"\r\n          type=\"text\"\r\n          placeholder=\"search user\"\r\n          value={searchUsersInput}\r\n          onChange={(e) => setSearchUsersInput(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"flex chat-settings-addable-members\">\r\n        <If condition={searchUsersInput !== \"\"}>\r\n          {notRoomMembers.map((m) => {\r\n            return (\r\n              <If condition={m !== undefined}>\r\n                <If\r\n                  condition={\r\n                    m.name.includes(searchUsersInput) &&\r\n                    !roomMembers.includes(m)\r\n                  }\r\n                >\r\n                  <span\r\n                    className=\"chat-settings-add-member-user\"\r\n                    onClick={() => {\r\n                      setRoomMembers((prev) => {\r\n                        return [...prev, m];\r\n                      });\r\n                      setNewRoomMembers((prev) => {\r\n                        return [...prev, m];\r\n                      });\r\n                    }}\r\n                  >\r\n                    {m.name}\r\n                  </span>\r\n                </If>\r\n              </If>\r\n            );\r\n          })}\r\n        </If>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"chat-settings-text\">color:</div>\r\n      <div className=\"flex chat-settings-default-colors\">\r\n        <div\r\n          className={`settings-con-green ${\r\n            roomTheme === \"#A2DC68\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#A2DC68\")}\r\n        ></div>\r\n        <div\r\n          className={`settings-con-blue ${\r\n            roomTheme === \"#68DCC4\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#68DCC4\")}\r\n        ></div>\r\n        <div\r\n          className={`settings-con-purple ${\r\n            roomTheme === \"#DC68D0\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#DC68D0\")}\r\n        ></div>\r\n        <div\r\n          className={`settings-con-yellow ${\r\n            roomTheme === \"#D8DC68\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#D8DC68\")}\r\n        ></div>\r\n      </div>\r\n\r\n      <div className=\"flex chat-settings-color-pick\">\r\n        <div className=\"chat-settings-text\">pick:</div>\r\n        <input\r\n          className=\"chat-settings-color-picker\"\r\n          type=\"color\"\r\n          onChange={(e) => setRoomTheme(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <hr />\r\n      <div\r\n        className=\"chat-settings-delete\"\r\n        onClick={async () => {\r\n          const abortController = new AbortController();\r\n          await fetchLeaveChatroom(abortController.signal, room._id);\r\n          return () => abortController.abort();\r\n        }}\r\n      >\r\n        <span>X</span> Leave chatroom\r\n      </div>\r\n      <div\r\n        className=\"chat-settings-save\"\r\n        onClick={() => fetchUpdateChatroom(room._id)}\r\n      >\r\n        SAVE\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AdminChatroomSettings = ({\r\n  user,\r\n  room,\r\n  roomAdmins,\r\n  setRoomAdmins,\r\n  setRoomName,\r\n  roomMembers,\r\n  setRoomMembers,\r\n  notRoomMembers,\r\n  setNotRoomMembers,\r\n  roomTheme,\r\n  setRoomTheme,\r\n  searchUsersInput,\r\n  setSearchUsersInput,\r\n  fetchDeleteChatroom,\r\n  fetchUpdateChatroom,\r\n}) => {\r\n  return (\r\n    <>\r\n      <p className=\"chat-settings-members\">{room.members.length} members</p>\r\n\r\n      <label className=\"chat-settings-text\">Change name:</label>\r\n      <input\r\n        className=\"chat-settings-input-text\"\r\n        type=\"text\"\r\n        placeholder={room.name}\r\n        onChange={(e) => setRoomName(e.target.value)}\r\n      />\r\n\r\n      <div className=\"chat-settings-text\">Members:</div>\r\n      <div className=\"flex chat-settings-members-container\">\r\n        {roomMembers.map((m, i) => {\r\n          return (\r\n            <div>\r\n              <div className=\"flex chat-settings-current-members\">\r\n                <div className=\"current-members\">{m.name} </div>\r\n                <If condition={roomAdmins.includes(m)}>\r\n                  <span>A</span>\r\n                </If>\r\n              </div>\r\n              <If condition={m._id !== user._id}>\r\n                <If condition={!roomAdmins.includes(m)}>\r\n                  <div\r\n                    className=\"chat-settings-make-admin\"\r\n                    onClick={() =>\r\n                      setRoomAdmins((prev) => {\r\n                        return [...prev, m];\r\n                      })\r\n                    }\r\n                  >\r\n                    adminize\r\n                  </div>\r\n                </If>\r\n                <If condition={!roomAdmins.includes(m)}>\r\n                  <div\r\n                    className=\"chat-settings-kick\"\r\n                    onClick={() => {\r\n                      let newArr = roomMembers.filter((me) => me._id !== m._id);\r\n                      setRoomMembers(newArr);\r\n                      let newArr2 = notRoomMembers;\r\n                      if (!newArr2.includes(m)) newArr2.push(m);\r\n                      setNotRoomMembers(newArr2);\r\n                    }}\r\n                  >\r\n                    kick\r\n                  </div>\r\n                </If>\r\n              </If>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"flex\">\r\n        <label className=\"chat-settings-text\">Add member:</label>\r\n        <input\r\n          className=\"chat-settings-input-text\"\r\n          type=\"text\"\r\n          placeholder=\"search member\"\r\n          value={searchUsersInput}\r\n          onChange={(e) => setSearchUsersInput(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"flex chat-settings-addable-members\">\r\n        <If condition={searchUsersInput !== \"\"}>\r\n          {notRoomMembers.map((m) => {\r\n            return (\r\n              <If condition={m !== undefined}>\r\n                <If\r\n                  condition={\r\n                    m.name.includes(searchUsersInput) &&\r\n                    !roomMembers.includes(m)\r\n                  }\r\n                >\r\n                  <span\r\n                    className=\"chat-settings-add-member-user\"\r\n                    onClick={() =>\r\n                      setRoomMembers((prev) => {\r\n                        return [...prev, m];\r\n                      })\r\n                    }\r\n                  >\r\n                    {m.name}\r\n                  </span>\r\n                </If>\r\n              </If>\r\n            );\r\n          })}\r\n        </If>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"chat-settings-text\">Color:</div>\r\n      <div className=\"flex chat-settings-default-colors\">\r\n        <div\r\n          className={`settings-con-green ${\r\n            roomTheme === \"#A2DC68\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#A2DC68\")}\r\n        ></div>\r\n        <div\r\n          className={`settings-con-blue ${\r\n            roomTheme === \"#68DCC4\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#68DCC4\")}\r\n        ></div>\r\n        <div\r\n          className={`settings-con-purple ${\r\n            roomTheme === \"#DC68D0\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#DC68D0\")}\r\n        ></div>\r\n        <div\r\n          className={`settings-con-yellow ${\r\n            roomTheme === \"#D8DC68\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#D8DC68\")}\r\n        ></div>\r\n      </div>\r\n\r\n      <div className=\"flex chat-settings-color-pick\">\r\n        <div className=\"chat-settings-text\">Pick your own:</div>\r\n        <input\r\n          className=\"chat-settings-color-picker\"\r\n          type=\"color\"\r\n          onChange={(e) => {\r\n            e.target.classList.add(\"chosen-color\");\r\n            setRoomTheme(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div\r\n        className=\"chat-settings-delete\"\r\n        onClick={async () => {\r\n          const abortController = new AbortController();\r\n          await fetchDeleteChatroom(abortController.signal, room._id);\r\n          return () => abortController.abort();\r\n        }}\r\n      >\r\n        <span>X</span> Delete chatroom\r\n      </div>\r\n      <div\r\n        className=\"chat-settings-save\"\r\n        onClick={() => fetchUpdateChatroom(room._id)}\r\n      >\r\n        SAVE\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n{\r\n  /* not admin */\r\n}\r\n{\r\n  /* <If condition={!room.admins.includes(user._id)}>\r\n                  <p className=\"chat-settings-members\">\r\n                    {room.members.length} members\r\n                  </p>\r\n\r\n                  <div className=\"chat-settings-text\">Members:</div>\r\n                  <div className=\"flex chat-settings-members-container\">\r\n                    {roomMembers.map((m, i) => {\r\n                      return (\r\n                        <div>\r\n                          <div className=\"flex chat-settings-current-members\">\r\n                            <div className=\"current-members\">{m.name}</div>\r\n                            <If condition={roomAdmins.includes(m)}>\r\n                              <span>A</span>\r\n                            </If>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"flex\">\r\n                    <label className=\"chat-settings-text\">add members:</label>\r\n                    <input\r\n                      className=\"chat-settings-input-text\"\r\n                      type=\"text\"\r\n                      placeholder=\"search user\"\r\n                      value={searchUsersInput}\r\n                      onChange={(e) => setSearchUsersInput(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <If condition={searchUsersInput !== \"\"}>\r\n                      {notRoomMembers.map((m) => {\r\n                        return (\r\n                          <If condition={m !== undefined}>\r\n                            <If\r\n                              condition={\r\n                                m.name.includes(searchUsersInput) &&\r\n                                !roomMembers.includes(m)\r\n                              }\r\n                            >\r\n                              <span\r\n                                className=\"chat-settings-add-member-user\"\r\n                                onClick={() =>\r\n                                  setRoomMembers((prev) => {\r\n                                    return [...prev, m];\r\n                                  })\r\n                                }\r\n                              >\r\n                                {m.name}\r\n                              </span>\r\n                            </If>\r\n                          </If>\r\n                        );\r\n                      })}\r\n                    </If>\r\n                  </div>\r\n\r\n                  <hr />\r\n\r\n                  <div className=\"chat-settings-text\">color:</div>\r\n                  <div className=\"flex chat-settings-default-colors\">\r\n                    <div\r\n                      className={`settings-con-green ${\r\n                        roomTheme === \"#A2DC68\" ? \"chosen-color\" : \"\"\r\n                      }`}\r\n                      onClick={() => setRoomTheme(\"#A2DC68\")}\r\n                    ></div>\r\n                    <div\r\n                      className={`settings-con-blue ${\r\n                        roomTheme === \"#68DCC4\" ? \"chosen-color\" : \"\"\r\n                      }`}\r\n                      onClick={() => setRoomTheme(\"#68DCC4\")}\r\n                    ></div>\r\n                    <div\r\n                      className={`settings-con-purple ${\r\n                        roomTheme === \"#DC68D0\" ? \"chosen-color\" : \"\"\r\n                      }`}\r\n                      onClick={() => setRoomTheme(\"#DC68D0\")}\r\n                    ></div>\r\n                    <div\r\n                      className={`settings-con-yellow ${\r\n                        roomTheme === \"#D8DC68\" ? \"chosen-color\" : \"\"\r\n                      }`}\r\n                      onClick={() => setRoomTheme(\"#D8DC68\")}\r\n                    ></div>\r\n                  </div>\r\n\r\n                  <div className=\"flex chat-settings-color-pick\">\r\n                    <div className=\"chat-settings-text\">pick:</div>\r\n                    <input\r\n                      className=\"chat-settings-color-picker\"\r\n                      type=\"color\"\r\n                      onChange={(e) => setRoomTheme(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <hr />\r\n                  <div\r\n                    className=\"chat-settings-delete\"\r\n                    onClick={async () => {\r\n                      const abortController = new AbortController();\r\n                      await fetchLeaveChatroom(\r\n                        abortController.signal,\r\n                        room._id\r\n                      );\r\n                      return () => abortController.abort();\r\n                    }}\r\n                  >\r\n                    <span>X</span> Leave chatroom\r\n                  </div>\r\n                  <div\r\n                    className=\"chat-settings-save\"\r\n                    onClick={() => fetchUpdateChatroom(room._id)}\r\n                  >\r\n                    SAVE\r\n                  </div>\r\n                </If> */\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { If } from \"../../../../utils/If\";\r\n\r\nimport { SettingsChatroom } from \"./SettingsChatroom\";\r\n\r\nimport styled from \"styled-components\";\r\nconst StyledSection = styled(\"section\")`\r\n  background: linear-gradient(\r\n    235deg,\r\n    ${(props) => props.theme} 25%,\r\n    rgba(255, 255, 255, 1) 25%\r\n  );\r\n`;\r\n\r\nexport const SettingsCol2 = ({\r\n  ws,\r\n  user,\r\n  userChatrooms,\r\n  setChatroomUpdated,\r\n  avatarSwitch,\r\n  setAvatarSwitch\r\n}) => {\r\n  // states\r\n  const [activeChatroom, setActiveChatroom] = useState(null);\r\n  const [searchChatrooms, setSearchChatrooms] = useState(\"\");\r\n\r\n  const [updateMessage, setUpdateMessage] = useState([null, null]);\r\n\r\n  // useEffects\r\n  useEffect(() => {\r\n    if (updateMessage[0]) setTimeout(() => setUpdateMessage([null, null]), 4000);\r\n  }, [updateMessage]);\r\n\r\n  useEffect(() => {\r\n    if (activeChatroom) setAvatarSwitch(false);\r\n  }, [activeChatroom]);\r\n\r\n  return (\r\n    <section className=\"flex height100 dash-settings-chatrooms\">\r\n      <section className=\"flex search-chatroom-con\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"search chatrooms\"\r\n          onInput={(e) => setSearchChatrooms(e.target.value)}\r\n        />\r\n      </section>\r\n      <section className=\"flex height100 settings-chatrooms-con\">\r\n      {userChatrooms.map((room) => {\r\n        return (\r\n          <If condition={room.name.includes(searchChatrooms)}>\r\n            <StyledSection\r\n              theme={room.theme}\r\n              className={`col2-chatroom-con ${\r\n                activeChatroom === room ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => {\r\n                setActiveChatroom(room);\r\n              }}\r\n            >\r\n              <h5 className=\"flex\">\r\n                {room.name}\r\n                <If condition={room.admins.includes(user._id)}>\r\n                  <span>A</span>\r\n                </If>\r\n              </h5>\r\n              <If condition={updateMessage}>\r\n              <If condition={updateMessage[0] === room._id}>\r\n                <div>{updateMessage[1]} <i className=\"fas fa-check\"></i></div>\r\n              </If>\r\n              </If> \r\n              <If condition={room === activeChatroom}>\r\n                <SettingsChatroom\r\n                  ws={ws}\r\n                  user={user}\r\n                  room={room}\r\n                  activeChatroom={activeChatroom}\r\n                  setChatroomUpdated={setChatroomUpdated}\r\n                  setUpdateMessage={setUpdateMessage}\r\n                />\r\n              </If>\r\n            </StyledSection>\r\n          </If>\r\n        );\r\n      })}\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { post } from \"../../../../utils/http\";\r\nimport { If } from \"../../../../utils/If\";\r\nimport avatars from \"../../../../utils/avatars\";\r\n\r\nimport styled from \"styled-components\";\r\nconst StyledDiv = styled(\"div\")`\r\n  background-image: url(../avatars/${(props) => props.img});\r\n`;\r\n\r\nexport const SettingsCol3 = ({ user, setUserUpdated, avatarSwitch, setAvatarSwitch }) => {\r\n  // states\r\n  const [avatar, setAvatar] = useState([user.avatar, 0]);\r\n  // const [avatarSwitch, setAvatarSwitch] = useState(false);\r\n  const [theme, setTheme] = useState(user.theme);\r\n  const [name, setName] = useState(user.name);\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n\r\n  const [updateMessage, setUpdateMessage] = useState(null);\r\n\r\n  // fetches\r\n  const fetchUpdateUser = async () => {\r\n    let res = await post(`/protected/update-user/${user._id}`, {\r\n      name: name,\r\n      newPassword: newPassword,\r\n      currentPassword: currentPassword,\r\n      avatar: avatar[0],\r\n      avatarChange: avatar[1],\r\n      theme: theme,\r\n    });\r\n    setUserUpdated(true);\r\n    setAvatarSwitch(false);\r\n    setUpdateMessage(res.message);\r\n  };\r\n\r\n  // useEffects\r\n  useEffect(() => {\r\n    if (updateMessage) setTimeout(() => setUpdateMessage(null), 4000);\r\n  }, [updateMessage]);\r\n\r\n  return (\r\n    <div className=\"height100 col3-settings-con\">\r\n      <div className=\"user-settings-input-con\">\r\n        <label className=\"user-settings-text\" htmlFor=\"name\">\r\n          Name:\r\n        </label>\r\n        <input\r\n          className=\"user-settings-input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"user-settings-input-con\">\r\n        <label className=\"user-settings-text\" htmlFor=\"newPassword\">\r\n          New password:\r\n        </label>\r\n        <input\r\n          className=\"user-settings-input\"\r\n          type=\"password\"\r\n          name=\"newPassword\"\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"user-settings-input-con\">\r\n        <label className=\"user-settings-text\" htmlFor=\"password\">\r\n          Current password:\r\n        </label>\r\n        <input\r\n          className=\"user-settings-input\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={(e) => setCurrentPassword(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex user-settings-input-con\">\r\n        <label className=\"user-settings-text\" htmlFor=\"theme\">\r\n          Theme:\r\n        </label>\r\n        <div className=\"flex user-settings-themes\">\r\n          <div\r\n            className=\"user-settings-theme-1\"\r\n            onClick={() => setTheme(0)}\r\n          ></div>\r\n          <div\r\n            className=\"user-settings-theme-2\"\r\n            onClick={() => setTheme(1)}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      \r\n\r\n      <div className=\"flex user-settings-input-con\">\r\n        <label className=\"user-settings-text\" htmlFor=\"avatar\">\r\n          Avatar:\r\n        </label>\r\n        <StyledDiv img={avatar[0]} className=\"chosen-avatar\"></StyledDiv>\r\n        <button\r\n          className=\"change-avatar-button\"\r\n          onClick={() => setAvatarSwitch(!avatarSwitch)}\r\n        >\r\n          Change{\" \"}\r\n          <If condition={!avatarSwitch}>\r\n            <i class=\"fas fa-caret-down\"></i>\r\n          </If>\r\n          <If condition={avatarSwitch}>\r\n            <i class=\"fas fa-caret-up\"></i>\r\n          </If>\r\n        </button>\r\n      </div>\r\n      <If condition={avatarSwitch}>\r\n        <div className=\"flex avatars-con\">\r\n          {avatars.map((a) => {\r\n            return (\r\n              <StyledDiv\r\n                img={a}\r\n                className={`avatars ${a === avatar[0] ? \"current-avatar\" : \"\"}`}\r\n                onClick={() => setAvatar([a, 1])}\r\n              ></StyledDiv>\r\n            );\r\n          })}\r\n        </div>\r\n      </If>\r\n      <div className=\"flex user-settings-save-con\">\r\n        <button\r\n          className=\"user-settings-save-button\"\r\n          onClick={() => fetchUpdateUser()}\r\n        >\r\n          SAVE\r\n        </button>\r\n        \r\n      </div>\r\n      <If condition={updateMessage}>\r\n          <div>{updateMessage} <i className=\"fas fa-check\"></i></div>\r\n        </If>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nimport { SettingsCol2 } from \"./settings/SettingsCol2\";\r\nimport { SettingsCol3 } from \"./settings/SettingsCol3\";\r\n\r\nexport const NavSettings = ({\r\n  ws,\r\n  user,\r\n  setUserUpdated,\r\n  userChatrooms,\r\n  setChatroomUpdated,\r\n}) => {\r\n  // states\r\n  const [W, setW] = useState(window.innerWidth);\r\n  const [avatarSwitch, setAvatarSwitch] = useState(false);\r\n\r\n  // useEffects\r\n  useEffect(() => {\r\n    let changeW = window.addEventListener(\"resize\", () =>\r\n      setW(window.innerWidth)\r\n    );\r\n    return window.removeEventListener(\"resize\", changeW);\r\n  }, [W]);\r\n\r\n  return (\r\n    <>\r\n      <Col\r\n        lg={{ span: avatarSwitch ? 4 : 6, order: 2 }}\r\n        md={{ span: 6, order: 2 }}\r\n        xs={{ span: 12, order: 2 }}\r\n        className=\"dashboard-con-col2\"\r\n      >\r\n        <SettingsCol2\r\n          ws={ws}\r\n          user={user}\r\n          userChatrooms={userChatrooms}\r\n          setChatroomUpdated={setChatroomUpdated}\r\n          avatarSwitch={avatarSwitch}\r\n          setAvatarSwitch={setAvatarSwitch}\r\n        />\r\n      </Col>\r\n      <Col\r\n        lg={{ span: avatarSwitch ? 6 : 4, order: 3 }}\r\n        md={{ span: 4, order: 3 }}\r\n        xs={{ span: 12, order: 3 }}\r\n        className=\"dashboard-con-col3\"\r\n      >\r\n        <SettingsCol3 user={user} setUserUpdated={setUserUpdated} avatarSwitch={avatarSwitch} setAvatarSwitch={setAvatarSwitch} />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { get, post } from \"../../../../utils/http\";\r\nimport { If } from \"../../../../utils/If\";\r\n\r\nimport styled from \"styled-components\";\r\nconst StyledSection = styled(\"section\")`\r\n  background: linear-gradient(\r\n    235deg,\r\n    ${(props) => props.theme} 25%,\r\n    rgba(255, 255, 255, 1) 25%\r\n  );\r\n`;\r\nconst StyledDiv = styled(\"div\")`\r\n  background-image: url(../avatars/${(props) => props.img});\r\n`;\r\nconst StyledSpan = styled(\"span\")`\r\n  background-color: ${(props) => props.color};\r\n`;\r\n\r\nexport const HomeCol2 = ({\r\n  ws,\r\n  user,\r\n  userChatrooms,\r\n  notUserChatrooms,\r\n  activeChatroom,\r\n  setActiveChatroom,\r\n  setHomeCol3State,\r\n  chatroomLastMessage,\r\n  chatroomUnreadMsgs,\r\n  setChatroomUpdated,\r\n  usersOnline,\r\n  setMobileCol2Chatrooms,\r\n}) => {\r\n  // states\r\n  const [searchChatrooms, setSearchChatrooms] = useState(\"\");\r\n  const [showOtherChatrooms, setShowOtherChatrooms] = useState(false);\r\n  const [showOnlineUsers, setShowOnlineUsers] = useState(false);\r\n\r\n  // fetches\r\n  // const fetchDeleteChatrooms = async (signal) => {\r\n  //   await get(`/protected/delete-all-chatrooms`, signal);\r\n  // };\r\n  // const fetchDeleteMSGS = async (signal) => {\r\n  //   await get(`/protected/delete-all-messages`, signal);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    document.querySelector(\r\n      \".dash-home-chatrooms\"\r\n    ).style.height = `calc(100% - 5rem - ${\r\n      document.querySelector(\".dash-home-usersonline\").offsetHeight\r\n    }px)`;\r\n  }, [showOnlineUsers]);\r\n  return (\r\n    <>\r\n      <section className=\"flex search-chatroom-con\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder={\r\n            showOtherChatrooms\r\n              ? \"search other chatrooms\"\r\n              : \"search your chatrooms\"\r\n          }\r\n          onInput={(e) => setSearchChatrooms(e.target.value)}\r\n        />\r\n\r\n        <div className=\"flex\">\r\n          <label>other</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={(e) => setShowOtherChatrooms(e.target.checked)}\r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"dash-home-usersonline\">\r\n        <div\r\n          onClick={() => {\r\n            setShowOnlineUsers(!showOnlineUsers);\r\n          }}\r\n        >\r\n          <i class=\"fas fa-users\"></i> Users online ({usersOnline.length}){\" \"}\r\n          <If condition={!showOnlineUsers}>\r\n            <i class=\"fas fa-caret-down\"></i>\r\n          </If>\r\n          <If condition={showOnlineUsers}>\r\n            <i class=\"fas fa-caret-up\"></i>\r\n          </If>\r\n        </div>\r\n        <If condition={showOnlineUsers}>\r\n          {usersOnline.map((u) => {\r\n            return (\r\n              // <If condition={u._id !== user._id}>\r\n              <div className=\"flex users-online-container\">\r\n                <StyledDiv\r\n                  img={u.avatar}\r\n                  className=\"con-online-avatar\"\r\n                ></StyledDiv>\r\n                <div className=\"con-online-username\">{u.name}</div>\r\n              </div>\r\n              // </If>\r\n            );\r\n          })}\r\n        </If>\r\n      </section>\r\n\r\n      <section className=\"flex dash-home-chatrooms\">\r\n        {/* tillfälligt */}\r\n        {/* <button\r\n          onClick={() => {\r\n            const abortController = new AbortController();\r\n            fetchDeleteChatrooms(abortController.signal);\r\n            return () => abortController.abort();\r\n          }}\r\n        >\r\n          delete chatrooms\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            const abortController = new AbortController();\r\n            fetchDeleteMSGS(abortController.signal);\r\n            return () => abortController.abort();\r\n          }}\r\n        >\r\n          delete msgs\r\n        </button> */}\r\n        {/* --------- */}\r\n\r\n        <div className=\"flex home-chatrooms-con\">\r\n          <If condition={!showOtherChatrooms}>\r\n            {userChatrooms.map((room) => {\r\n              return (\r\n                <If condition={room.name.includes(searchChatrooms)}>\r\n                  <Chatroom\r\n                    joinable={false}\r\n                    room={room}\r\n                    user={user}\r\n                    activeChatroom={activeChatroom}\r\n                    setActiveChatroom={setActiveChatroom}\r\n                    setHomeCol3State={setHomeCol3State}\r\n                    chatroomLastMessage={chatroomLastMessage}\r\n                    chatroomUnreadMsgs={chatroomUnreadMsgs}\r\n                    ws={ws}\r\n                    setMobileCol2Chatrooms={setMobileCol2Chatrooms}\r\n                    usersOnline={usersOnline}\r\n                  />\r\n                </If>\r\n              );\r\n            })}\r\n          </If>\r\n\r\n          <If condition={showOtherChatrooms}>\r\n            {notUserChatrooms.map((room) => {\r\n              return (\r\n                <If condition={room.name.includes(searchChatrooms)}>\r\n                  <Chatroom\r\n                    joinable={true}\r\n                    room={room}\r\n                    user={user}\r\n                    ws={ws}\r\n                    setChatroomUpdated={setChatroomUpdated}\r\n                  />\r\n                </If>\r\n              );\r\n            })}\r\n          </If>\r\n        </div>\r\n      </section>\r\n\r\n      <div className=\"create-con\">\r\n        <i class=\"fas fa-plus\"></i>{\" \"}\r\n        <button\r\n          onClick={() => {\r\n            setHomeCol3State(\"createChatroom\");\r\n            setMobileCol2Chatrooms(false);\r\n          }}\r\n        >\r\n          create new chatroom\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Chatroom = ({\r\n  joinable,\r\n  room,\r\n  activeChatroom,\r\n  setActiveChatroom,\r\n  user,\r\n  setHomeCol3State,\r\n  chatroomLastMessage,\r\n  chatroomUnreadMsgs,\r\n  setChatroomUpdated,\r\n  ws,\r\n  setMobileCol2Chatrooms,\r\n  usersOnline,\r\n}) => {\r\n  // states\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [lastMessage, setLastMessage] = useState(false);\r\n  const [roomUnreadMsgs, setRoomUnreadMsgs] = useState(0);\r\n  const [nollifyUnreadMsgs, setNollifyUnreadMsgs] = useState(false);\r\n\r\n  // fetches\r\n  const fetchLastMessage = async (signal) => {\r\n    console.log(\"lol\");\r\n    let res = await get(\r\n      `/protected/get-chatroom-last-message/${room._id}`,\r\n      signal\r\n    );\r\n\r\n    setLastMessage(res.data);\r\n    if (room !== activeChatroom) {\r\n      return fetchGetChatroomUnread(signal);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStarmarkChatroom = async () => {\r\n    await post(`/protected/starmark-chatroom/${room._id}/${user._id}`);\r\n  };\r\n\r\n  const fetchUpdateChatroomUnread = async () => {\r\n    let res = await post(`/protected/update-chatroom-unread`, {\r\n      chatroomId: room._id,\r\n      userId: user._id,\r\n      nollify: nollifyUnreadMsgs,\r\n    });\r\n    setRoomUnreadMsgs(res.data);\r\n  };\r\n\r\n  const fetchGetChatroomUnread = async (signal) => {\r\n    let res = await get(\r\n      `/protected/get-chatroom-unread/${user._id}/${room._id}`,\r\n      signal\r\n    );\r\n\r\n    setRoomUnreadMsgs(res.data.unread);\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchJoinChatroom = async () => {\r\n    let res = await post(`/protected/join-chatroom`, {\r\n      chatroomId: room._id,\r\n      userId: user._id,\r\n    });\r\n\r\n    ws.send(\r\n      JSON.stringify({\r\n        type: \"chatroomUpdate\",\r\n        detail: \"userJoined\",\r\n        chatroomId: room._id,\r\n        user: user,\r\n      })\r\n    );\r\n\r\n    setChatroomUpdated(true);\r\n  };\r\n\r\n  // useEffects\r\n  useEffect(async () => {\r\n    if (!joinable) {\r\n      const abortController = new AbortController();\r\n      await fetchLastMessage(abortController.signal);\r\n      return () => abortController.abort();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    if (chatroomLastMessage) {\r\n      if (!joinable && chatroomLastMessage.chatroom === room._id) {\r\n        const abortController = new AbortController();\r\n        await fetchLastMessage(abortController.signal);\r\n        return () => abortController.abort();\r\n      }\r\n    }\r\n  }, [chatroomLastMessage]);\r\n\r\n  useEffect(async () => {\r\n    if (chatroomUnreadMsgs || nollifyUnreadMsgs) {\r\n      if (\r\n        (!joinable && nollifyUnreadMsgs) ||\r\n        (!joinable && chatroomUnreadMsgs.chatroom === room._id)\r\n      ) {\r\n        const abortController = new AbortController();\r\n        await fetchUpdateChatroomUnread(abortController.signal);\r\n        return () => abortController.abort();\r\n      }\r\n    }\r\n  }, [chatroomUnreadMsgs, nollifyUnreadMsgs]);\r\n\r\n  if (loading) {\r\n    <h4>loading ...</h4>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <If condition={!joinable}>\r\n        <StyledSection\r\n          theme={room.theme}\r\n          className={`col2-chatroom-con ${\r\n            activeChatroom === room ? \"active\" : \"\"\r\n          }`}\r\n          onClick={async () => {\r\n            setActiveChatroom(room);\r\n            setHomeCol3State(\"chat\");\r\n            setMobileCol2Chatrooms(false);\r\n            if (roomUnreadMsgs > 0) {\r\n              setNollifyUnreadMsgs(true);\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"flex chatroom-con-title-fav-con\">\r\n            <div className=\"flex fav-con-name-admin\">\r\n              <div className=\"flex\">\r\n                <h5>{room.name}</h5>\r\n                <If condition={room.admins.includes(user._id)}>\r\n                  <div className=\"fav-con-admin-icon\">A</div>\r\n                </If>\r\n              </div>\r\n            </div>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path\r\n                className={`${\r\n                  room.starmarked.includes(user._id) ? \"starmarked\" : \"\"\r\n                } title-fav-con-fav`}\r\n                onClick={(e) => {\r\n                  e.target.classList.toggle(\"starmarked\");\r\n                  fetchStarmarkChatroom();\r\n                }}\r\n                d=\"M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          {lastMessage ? (\r\n            <div className=\"flex chatroom-con-mes\">\r\n              <StyledDiv\r\n                img={lastMessage.user.avatar}\r\n                className=\"con-mes-avatar\"\r\n              >\r\n                <div className=\"onlinestatus-con\">\r\n                  <StyledSpan\r\n                    color={\r\n                      usersOnline.filter(\r\n                        (user) => user._id === lastMessage.user._id\r\n                      ).length > 0\r\n                        ? \"#A2DC68\"\r\n                        : \"#FF997D\"\r\n                    }\r\n                    className=\"user-con-onlinestatus\"\r\n                  ></StyledSpan>\r\n                </div>\r\n              </StyledDiv>\r\n              <div>\r\n                <div className=\"con-mes-message\">\r\n                  {lastMessage.message.text}\r\n                </div>\r\n                <div className=\"con-mes-message-time\">\r\n                  {lastMessage.message.time}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"con-mes-no-message\">no messages</div>\r\n          )}\r\n          <If condition={roomUnreadMsgs > 0}>\r\n            <div className=\"new-message-container\">\r\n              <div className=\"new-messages-icon\">{roomUnreadMsgs}</div>\r\n            </div>\r\n          </If>\r\n        </StyledSection>\r\n      </If>\r\n      <If condition={joinable}>\r\n        <StyledSection className=\"col2-chatroom-con\" theme={room.theme}>\r\n          <div className=\"flex chatroom-con-title-fav-con\">\r\n            <h5>{room.name}</h5>\r\n          </div>\r\n          <button onClick={() => fetchJoinChatroom()}>JOIN</button>\r\n        </StyledSection>\r\n      </If>\r\n    </>\r\n  );\r\n};\r\n","export const getDateAndTime = () => {\r\n  let date = new Date().toLocaleDateString().split(\"-\");\r\n  let year = date[0].at(-2) + date[0].at(-1);\r\n  if (date[1].at(0) === 0 && date[2].at(0) === 0) {\r\n    let day = date[2];\r\n    let month = date[1];\r\n    date = `${day[1]}/${month[1]}`;\r\n  } else if (date[1].at(0) === 0) {\r\n    let month = date[1];\r\n    date = `${date[2]}/${month[1]}`;\r\n  } else if (date[2].at(0) === 0) {\r\n    let day = date[2];\r\n    date = `${day[1]}/${date[1]}`;\r\n  } else {\r\n    date = `${date[2]}/${date[1]}`;\r\n  }\r\n  let timeSplitted = new Date().toLocaleTimeString().split(\":\");\r\n  let time = timeSplitted[0] + \":\" + timeSplitted[1];\r\n  return date + \"-\" + year + \" \" + time;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { If } from \"../../../../utils/If\";\r\nimport { get, post } from \"../../../../utils/http\";\r\n\r\nexport const HomeCol3ChatSettings = ({\r\n  ws,\r\n  user,\r\n  room,\r\n  activeChatroom,\r\n  setActiveChatroom,\r\n  setChatroomUpdated,\r\n  setChatState,\r\n  setHomeCol3State,\r\n  //   setUpdateMessage,\r\n}) => {\r\n  // states\r\n  const [loading, setLoading] = useState(true);\r\n  const [roomName, setRoomName] = useState(null);\r\n  const [roomMembers, setRoomMembers] = useState([]);\r\n  const [roomAdmins, setRoomAdmins] = useState([]);\r\n  const [roomTheme, setRoomTheme] = useState(null);\r\n  const [notRoomMembers, setNotRoomMembers] = useState([]);\r\n  const [searchUsersInput, setSearchUsersInput] = useState(\"\");\r\n\r\n  // fetches\r\n  const fetchAllUsers = async (signal, activeRoom) => {\r\n    let res = await get(`/protected/get-all-users`, signal);\r\n    setRoomMembers(\r\n      res.data\r\n        .filter((u) => activeRoom.members.includes(u._id))\r\n        .sort((a, b) => {\r\n          return (\r\n            activeRoom.admins.includes(b._id) -\r\n            activeRoom.admins.includes(a._id)\r\n          );\r\n        })\r\n    );\r\n    setNotRoomMembers(\r\n      res.data.filter((u) => !activeRoom.members.includes(u._id))\r\n    );\r\n    setRoomAdmins(res.data.filter((u) => activeRoom.admins.includes(u._id)));\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchUpdateChatroom = async (roomId) => {\r\n    let newRoomAdmins = [];\r\n    roomAdmins.forEach((a) => {\r\n      newRoomAdmins.push(a._id);\r\n    });\r\n    let newRoomMembers = [];\r\n    roomMembers.forEach((m) => newRoomMembers.push(m._id));\r\n    let newRoomTheme;\r\n    if (roomTheme === null) {\r\n      newRoomTheme = activeChatroom.theme;\r\n    } else {\r\n      newRoomTheme = roomTheme;\r\n    }\r\n    let newRoomName;\r\n    if (roomName === null) {\r\n      newRoomName = activeChatroom.name;\r\n    } else {\r\n      newRoomName = roomName;\r\n    }\r\n\r\n    let res = await post(`/protected/update-chatroom/` + roomId, {\r\n      name: newRoomName,\r\n      admins: newRoomAdmins,\r\n      members: newRoomMembers,\r\n      theme: newRoomTheme,\r\n    });\r\n    setChatroomUpdated(true);\r\n    setChatState(true);\r\n    setActiveChatroom(res.data);\r\n    // setUpdateMessage(res.message);\r\n  };\r\n\r\n  const fetchDeleteChatroom = async (signal, roomId) => {\r\n    let res = await get(`/protected/delete-chatroom/` + roomId, signal);\r\n    setChatroomUpdated(true);\r\n    setHomeCol3State(\"createChatroom\");\r\n    setActiveChatroom(null);\r\n    ws.send(\r\n      JSON.stringify({\r\n        type: \"chatroomUpdate\",\r\n        detail: \"userLeft\",\r\n        chatroomId: roomId,\r\n        user: user,\r\n      })\r\n    );\r\n  };\r\n\r\n  const fetchLeaveChatroom = async (signal, roomId) => {\r\n    let res = await post(\r\n      `/protected/leave-chatroom/` + roomId + \"/\" + user._id,\r\n      signal\r\n    );\r\n    \r\n    setChatroomUpdated(true);\r\n    setHomeCol3State(\"createChatroom\");\r\n    setActiveChatroom(null);\r\n    ws.send(\r\n      JSON.stringify({\r\n        type: \"chatroomUpdate\",\r\n        detail: \"userLeft\",\r\n        chatroomId: roomId,\r\n        user: user,\r\n      })\r\n    );\r\n  };\r\n\r\n  // useEffects\r\n  useEffect(async () => {\r\n    const abortController = new AbortController();\r\n    if (activeChatroom)\r\n      await fetchAllUsers(abortController.signal, activeChatroom);\r\n    return () => abortController.abort();\r\n  }, [activeChatroom]);\r\n\r\n  if (loading) {\r\n    return <h2 className=\"\">Loading...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <If condition={room.admins.includes(user._id)}>\r\n        <AdminChatroomSettings\r\n          user={user}\r\n          room={room}\r\n          roomAdmins={roomAdmins}\r\n          setRoomAdmins={setRoomAdmins}\r\n          roomName={roomName}\r\n          setRoomName={setRoomName}\r\n          roomMembers={roomMembers}\r\n          setRoomMembers={setRoomMembers}\r\n          notRoomMembers={notRoomMembers}\r\n          setNotRoomMembers={setNotRoomMembers}\r\n          roomTheme={roomTheme}\r\n          setRoomTheme={setRoomTheme}\r\n          searchUsersInput={searchUsersInput}\r\n          setSearchUsersInput={setSearchUsersInput}\r\n          fetchDeleteChatroom={fetchDeleteChatroom}\r\n          fetchUpdateChatroom={fetchUpdateChatroom}\r\n        />\r\n      </If>\r\n      <If condition={!room.admins.includes(user._id)}>\r\n        <MemberChatroomSettings\r\n          user={user}\r\n          room={room}\r\n          roomAdmins={roomAdmins}\r\n          roomName={roomName}\r\n          roomMembers={roomMembers}\r\n          setRoomMembers={setRoomMembers}\r\n          notRoomMembers={notRoomMembers}\r\n          setNotRoomMembers={setNotRoomMembers}\r\n          roomTheme={roomTheme}\r\n          setRoomTheme={setRoomTheme}\r\n          searchUsersInput={searchUsersInput}\r\n          setSearchUsersInput={setSearchUsersInput}\r\n          fetchLeaveChatroom={fetchLeaveChatroom}\r\n          fetchUpdateChatroom={fetchUpdateChatroom}\r\n        />\r\n      </If>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MemberChatroomSettings = ({\r\n  room,\r\n  roomAdmins,\r\n  roomMembers,\r\n  setRoomMembers,\r\n  notRoomMembers,\r\n  setNotRoomMembers,\r\n  roomTheme,\r\n  setRoomTheme,\r\n  searchUsersInput,\r\n  setSearchUsersInput,\r\n  fetchLeaveChatroom,\r\n  fetchUpdateChatroom,\r\n}) => {\r\n  return (\r\n    <>\r\n      <p className=\"chat-settings-members\">{room.members.length} members</p>\r\n      <div className=\"chat-settings-text\">Members:</div>\r\n      <div className=\"flex chat-settings-members-container\">\r\n        {roomMembers.map((m, i) => {\r\n          return (\r\n            <div>\r\n              <div className=\"flex chat-settings-current-members\">\r\n                <div className=\"current-members\">{m.name}</div>\r\n                <If condition={roomAdmins.includes(m)}>\r\n                  <span>A</span>\r\n                </If>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"flex\">\r\n        <label className=\"chat-settings-text\">add members:</label>\r\n        <input\r\n          className=\"chat-settings-input-text\"\r\n          type=\"text\"\r\n          placeholder=\"search user\"\r\n          value={searchUsersInput}\r\n          onChange={(e) => setSearchUsersInput(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <If condition={searchUsersInput !== \"\"}>\r\n          {notRoomMembers.map((m) => {\r\n            return (\r\n              <If condition={m !== undefined}>\r\n                <If\r\n                  condition={\r\n                    m.name.includes(searchUsersInput) &&\r\n                    !roomMembers.includes(m)\r\n                  }\r\n                >\r\n                  <span\r\n                    className=\"chat-settings-add-member-user\"\r\n                    onClick={() =>\r\n                      setRoomMembers((prev) => {\r\n                        return [...prev, m];\r\n                      })\r\n                    }\r\n                  >\r\n                    {m.name}\r\n                  </span>\r\n                </If>\r\n              </If>\r\n            );\r\n          })}\r\n        </If>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"chat-settings-text\">Color:</div>\r\n      <div className=\"flex chat-settings-default-colors\">\r\n        <div\r\n          className={`settings-con-green ${\r\n            roomTheme === \"#A2DC68\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#A2DC68\")}\r\n        ></div>\r\n        <div\r\n          className={`settings-con-blue ${\r\n            roomTheme === \"#68DCC4\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#68DCC4\")}\r\n        ></div>\r\n        <div\r\n          className={`settings-con-purple ${\r\n            roomTheme === \"#DC68D0\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#DC68D0\")}\r\n        ></div>\r\n        <div\r\n          className={`settings-con-yellow ${\r\n            roomTheme === \"#D8DC68\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#D8DC68\")}\r\n        ></div>\r\n      </div>\r\n\r\n      <div className=\"flex chat-settings-color-pick\">\r\n        <div className=\"chat-settings-text\">Pick your own:</div>\r\n        <input\r\n          className=\"chat-settings-color-picker\"\r\n          type=\"color\"\r\n          onChange={(e) => setRoomTheme(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <hr />\r\n      <div\r\n        className=\"chat-settings-delete\"\r\n        onClick={async () => {\r\n          const abortController = new AbortController();\r\n          await fetchLeaveChatroom(abortController.signal, room._id);\r\n          return () => abortController.abort();\r\n        }}\r\n      >\r\n        <span>X</span> Leave chatroom\r\n      </div>\r\n      <div\r\n        className=\"chat-settings-save\"\r\n        onClick={() => fetchUpdateChatroom(room._id)}\r\n      >\r\n        SAVE\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AdminChatroomSettings = ({\r\n  user,\r\n  room,\r\n  roomAdmins,\r\n  setRoomAdmins,\r\n  setRoomName,\r\n  roomMembers,\r\n  setRoomMembers,\r\n  notRoomMembers,\r\n  setNotRoomMembers,\r\n  roomTheme,\r\n  setRoomTheme,\r\n  searchUsersInput,\r\n  setSearchUsersInput,\r\n  fetchDeleteChatroom,\r\n  fetchUpdateChatroom,\r\n}) => {\r\n  return (\r\n    <>\r\n      <p className=\"chat-settings-members\">{room.members.length} members</p>\r\n\r\n      <div className=\"flex\">\r\n        <label className=\"chat-settings-text\">Change name:</label>\r\n        <input\r\n          className=\"chat-settings-input-text\"\r\n          type=\"text\"\r\n          placeholder={room.name}\r\n          onChange={(e) => setRoomName(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"chat-settings-text\">Members:</div>\r\n      <div className=\"flex chat-settings-members-container\">\r\n        {roomMembers.map((m, i) => {\r\n          return (\r\n            <div>\r\n              <div className=\"flex chat-settings-current-members\">\r\n                <div className=\"current-members\">{m.name} </div>\r\n                <If condition={roomAdmins.includes(m)}>\r\n                  <span>A</span>\r\n                </If>\r\n              </div>\r\n              <If condition={m._id !== user._id}>\r\n                <If condition={!roomAdmins.includes(m)}>\r\n                  <div\r\n                    className=\"chat-settings-make-admin\"\r\n                    onClick={() =>\r\n                      setRoomAdmins((prev) => {\r\n                        return [...prev, m];\r\n                      })\r\n                    }\r\n                  >\r\n                    adminize\r\n                  </div>\r\n                </If>\r\n                <If condition={!roomAdmins.includes(m)}>\r\n                  <div\r\n                    className=\"chat-settings-kick\"\r\n                    onClick={() => {\r\n                      let newArr = roomMembers.filter((me) => me._id !== m._id);\r\n                      setRoomMembers(newArr);\r\n                      let newArr2 = notRoomMembers;\r\n                      if (!newArr2.includes(m)) newArr2.push(m);\r\n                      setNotRoomMembers(newArr2);\r\n                    }}\r\n                  >\r\n                    kick\r\n                  </div>\r\n                </If>\r\n              </If>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"flex\">\r\n        <label className=\"chat-settings-text\">Add member:</label>\r\n        <input\r\n          className=\"chat-settings-input-text\"\r\n          type=\"text\"\r\n          placeholder=\"search member\"\r\n          value={searchUsersInput}\r\n          onChange={(e) => setSearchUsersInput(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <If condition={searchUsersInput !== \"\"}>\r\n          {notRoomMembers.map((m) => {\r\n            return (\r\n              <If condition={m !== undefined}>\r\n                <If\r\n                  condition={\r\n                    m.name.includes(searchUsersInput) &&\r\n                    !roomMembers.includes(m)\r\n                  }\r\n                >\r\n                  <span\r\n                    className=\"chat-settings-add-member-user\"\r\n                    onClick={() =>\r\n                      setRoomMembers((prev) => {\r\n                        return [...prev, m];\r\n                      })\r\n                    }\r\n                  >\r\n                    {m.name}\r\n                  </span>\r\n                </If>\r\n              </If>\r\n            );\r\n          })}\r\n        </If>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"chat-settings-text\">Color:</div>\r\n      <div className=\"flex chat-settings-default-colors\">\r\n        <div\r\n          className={`settings-con-green ${\r\n            roomTheme === \"#A2DC68\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#A2DC68\")}\r\n        ></div>\r\n        <div\r\n          className={`settings-con-blue ${\r\n            roomTheme === \"#68DCC4\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#68DCC4\")}\r\n        ></div>\r\n        <div\r\n          className={`settings-con-purple ${\r\n            roomTheme === \"#DC68D0\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#DC68D0\")}\r\n        ></div>\r\n        <div\r\n          className={`settings-con-yellow ${\r\n            roomTheme === \"#D8DC68\" ? \"chosen-color\" : \"\"\r\n          }`}\r\n          onClick={() => setRoomTheme(\"#D8DC68\")}\r\n        ></div>\r\n      </div>\r\n\r\n      <div className=\"flex chat-settings-color-pick\">\r\n        <div className=\"chat-settings-text\">Pick your own:</div>\r\n        <input\r\n          className=\"chat-settings-color-picker\"\r\n          type=\"color\"\r\n          onChange={(e) => {\r\n            e.target.classList.add(\"chosen-color\");\r\n            setRoomTheme(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div\r\n        className=\"chat-settings-delete\"\r\n        onClick={async () => {\r\n          const abortController = new AbortController();\r\n          await fetchDeleteChatroom(abortController.signal, room._id);\r\n          return () => abortController.abort();\r\n        }}\r\n      >\r\n        <span>X</span> Delete chatroom\r\n      </div>\r\n      <div\r\n        className=\"chat-settings-save\"\r\n        onClick={() => fetchUpdateChatroom(room._id)}\r\n      >\r\n        SAVE\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n{\r\n  /* not admin */\r\n}\r\n{\r\n  /* <If condition={!room.admins.includes(user._id)}>\r\n                  <p className=\"chat-settings-members\">\r\n                    {room.members.length} members\r\n                  </p>\r\n\r\n                  <div className=\"chat-settings-text\">Members:</div>\r\n                  <div className=\"flex chat-settings-members-container\">\r\n                    {roomMembers.map((m, i) => {\r\n                      return (\r\n                        <div>\r\n                          <div className=\"flex chat-settings-current-members\">\r\n                            <div className=\"current-members\">{m.name}</div>\r\n                            <If condition={roomAdmins.includes(m)}>\r\n                              <span>A</span>\r\n                            </If>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"flex\">\r\n                    <label className=\"chat-settings-text\">add members:</label>\r\n                    <input\r\n                      className=\"chat-settings-input-text\"\r\n                      type=\"text\"\r\n                      placeholder=\"search user\"\r\n                      value={searchUsersInput}\r\n                      onChange={(e) => setSearchUsersInput(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <If condition={searchUsersInput !== \"\"}>\r\n                      {notRoomMembers.map((m) => {\r\n                        return (\r\n                          <If condition={m !== undefined}>\r\n                            <If\r\n                              condition={\r\n                                m.name.includes(searchUsersInput) &&\r\n                                !roomMembers.includes(m)\r\n                              }\r\n                            >\r\n                              <span\r\n                                className=\"chat-settings-add-member-user\"\r\n                                onClick={() =>\r\n                                  setRoomMembers((prev) => {\r\n                                    return [...prev, m];\r\n                                  })\r\n                                }\r\n                              >\r\n                                {m.name}\r\n                              </span>\r\n                            </If>\r\n                          </If>\r\n                        );\r\n                      })}\r\n                    </If>\r\n                  </div>\r\n\r\n                  <hr />\r\n\r\n                  <div className=\"chat-settings-text\">color:</div>\r\n                  <div className=\"flex chat-settings-default-colors\">\r\n                    <div\r\n                      className={`settings-con-green ${\r\n                        roomTheme === \"#A2DC68\" ? \"chosen-color\" : \"\"\r\n                      }`}\r\n                      onClick={() => setRoomTheme(\"#A2DC68\")}\r\n                    ></div>\r\n                    <div\r\n                      className={`settings-con-blue ${\r\n                        roomTheme === \"#68DCC4\" ? \"chosen-color\" : \"\"\r\n                      }`}\r\n                      onClick={() => setRoomTheme(\"#68DCC4\")}\r\n                    ></div>\r\n                    <div\r\n                      className={`settings-con-purple ${\r\n                        roomTheme === \"#DC68D0\" ? \"chosen-color\" : \"\"\r\n                      }`}\r\n                      onClick={() => setRoomTheme(\"#DC68D0\")}\r\n                    ></div>\r\n                    <div\r\n                      className={`settings-con-yellow ${\r\n                        roomTheme === \"#D8DC68\" ? \"chosen-color\" : \"\"\r\n                      }`}\r\n                      onClick={() => setRoomTheme(\"#D8DC68\")}\r\n                    ></div>\r\n                  </div>\r\n\r\n                  <div className=\"flex chat-settings-color-pick\">\r\n                    <div className=\"chat-settings-text\">pick:</div>\r\n                    <input\r\n                      className=\"chat-settings-color-picker\"\r\n                      type=\"color\"\r\n                      onChange={(e) => setRoomTheme(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <hr />\r\n                  <div\r\n                    className=\"chat-settings-delete\"\r\n                    onClick={async () => {\r\n                      const abortController = new AbortController();\r\n                      await fetchLeaveChatroom(\r\n                        abortController.signal,\r\n                        room._id\r\n                      );\r\n                      return () => abortController.abort();\r\n                    }}\r\n                  >\r\n                    <span>X</span> Leave chatroom\r\n                  </div>\r\n                  <div\r\n                    className=\"chat-settings-save\"\r\n                    onClick={() => fetchUpdateChatroom(room._id)}\r\n                  >\r\n                    SAVE\r\n                  </div>\r\n                </If> */\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\n// import { BsEmojiSmileUpsideDown } from \"react-icons/bs\";\r\n\r\nimport { get, post } from \"../../../../utils/http\";\r\nimport { If } from \"../../../../utils/If\";\r\nimport { getDateAndTime } from \"../../../../utils/getDate&Time\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { HomeCol3ChatSettings } from \"./HomeCol3ChatSettings\";\r\nconst StyledDiv = styled(\"div\")`\r\n  background-image: url(../avatars/${(props) => props.img});\r\n`;\r\n\r\nconst StyledSpan = styled(\"span\")`\r\n  background-color: ${(props) => props.color};\r\n`;\r\n\r\nconst StyledSection = styled(\"section\")`\r\n  background-color: ${(props) => props.color};\r\n`;\r\n\r\nexport const HomeCol3Chat = ({\r\n  ws,\r\n  user,\r\n  activeChatroom,\r\n  setActiveChatroom,\r\n  chatroomMessages,\r\n  setChatroomMessages,\r\n  newReaction,\r\n  setNewReaction,\r\n  membersTyping,\r\n  usersOnline,\r\n  setChatroomUpdated,\r\n  setHomeCol3State,\r\n}) => {\r\n  // states\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [chatroomUsers, setChatroomUsers] = useState([]);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [msgAva, setMsgAva] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n\r\n  const [chatState, setChatState] = useState(true);\r\n\r\n  const [showGoBotArrow, setShowGoBotArrow] = useState(false);\r\n    const [chatScrollTop, setChatScrollTop] = useState(null);\r\n\r\n  // fetches\r\n  const fetchChatroomUsersAndMessages = async (signal) => {\r\n    setLoading(true);\r\n    let res = await get(\r\n      `/protected/get-chatroom-users/${activeChatroom._id}`,\r\n      signal\r\n    );\r\n    setChatroomUsers(res.data);\r\n\r\n    return fetchChatroomMessages(signal);\r\n  };\r\n\r\n  const fetchChatroomMessages = async (signal) => {\r\n    let res2 = await get(\r\n      `/protected/get-chatroom-messages/${activeChatroom._id}`,\r\n      signal\r\n    );\r\n    filterMsgsAva(res2.data);\r\n    setChatroomMessages(res2.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchChatroomUsers = async (signal) => {\r\n    let res = await get(\r\n      `/protected/get-chatroom-users/${activeChatroom._id}`,\r\n      signal\r\n    );\r\n    setChatroomUsers(res.data);\r\n  };\r\n\r\n  //   functions\r\n\r\n  const handleKeyPress = (e) => {\r\n  if (e.key === 'Enter' && inputMessage !== \"\") \r\n    sendMessage();\r\n}\r\n\r\n  const sendMessage = () => {\r\n    if (ws && ws.readyState === 1)\r\n      ws.send(\r\n        JSON.stringify({\r\n          type: \"message\",\r\n          detail: \"message\",\r\n          sender: user,\r\n          // senderName: user.name,\r\n          // senderAva: user.avatar,\r\n          chatroom: activeChatroom._id,\r\n          reactions: [],\r\n          text: inputMessage,\r\n          time: getDateAndTime(),\r\n        })\r\n      );\r\n    setInputMessage(\"\");\r\n    setIsTyping(false);\r\n  };\r\n\r\n  const filterMsgsAva = (msgs) => {\r\n    let arr = [];\r\n    for (let i = 0; i < msgs.length; i++) {\r\n      if (msgs[i + 1]) {\r\n        if (\r\n          msgs[i].sender._id !== msgs[i + 1].sender._id ||\r\n          (msgs[i].sender._id === msgs[i + 1].sender._id &&\r\n            msgs[i + 1].msgType === \"userUpdate\")\r\n        ) {\r\n          arr.push(msgs[i]);\r\n        }\r\n      } else {\r\n        arr.push(msgs[i]);\r\n      }\r\n    }\r\n    setMsgAva(arr);\r\n  };\r\n\r\n  // const checkIfGoBotArrow = (el) => {\r\n  //   setChatScrollTop(el.scrollTop);\r\n  //   console.log(el.scrollTop);\r\n\r\n  // }\r\n   const handleScroll = (e) => {\r\n    const bottom = e.scrollHeight - e.scrollTop === e.clientHeight;\r\n    if (bottom) { \r\n      setShowGoBotArrow(false);\r\n     } else {\r\n       setShowGoBotArrow(true);\r\n     }\r\n  }\r\n\r\n  // useEffects\r\n\r\n  // useEffect(async () => {\r\n  //   if (chatScrollTop) {\r\n  //     console.log(chatScrollTop, document.querySelector(`.chat-con-mid`).scrollHeight);\r\n  //   if (chatScrollTop === document.querySelector(`.chat-con-mid`).scrollHeight) {\r\n  //     setShowGoBotArrow(false);\r\n  //   } else {\r\n  //     setShowGoBotArrow(true);\r\n  //   }}\r\n  // }, [chatScrollTop]);\r\n\r\n  useEffect(async () => {\r\n    filterMsgsAva(chatroomMessages);\r\n  }, [chatroomMessages]);\r\n\r\n  useEffect(async () => {\r\n    const abortController = new AbortController();\r\n    if (activeChatroom)\r\n      setChatState(true);\r\n      await fetchChatroomUsersAndMessages(abortController.signal);\r\n    return () => abortController.abort();\r\n  }, [activeChatroom]);\r\n\r\n  useEffect(async () => {\r\n    // if (inputMessage.length > 0) {\r\n    if (isTyping) {\r\n      console.log(\"typing\");\r\n      if (ws && ws.readyState === 1)\r\n        ws.send(\r\n          JSON.stringify({\r\n            type: \"isTyping\",\r\n            detail: true,\r\n            user: user,\r\n            chatroom: activeChatroom._id,\r\n          })\r\n        );\r\n    } else {\r\n      // if (inputMessage.length > 1)\r\n      if (ws && ws.readyState === 1)\r\n        ws.send(\r\n          JSON.stringify({\r\n            type: \"isTyping\",\r\n            detail: false,\r\n            user: user,\r\n            chatroom: activeChatroom._id,\r\n          })\r\n        );\r\n    }\r\n  }, [isTyping]);\r\n\r\n  if (loading) {\r\n    return <h4>loading ...</h4>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section\r\n      onKeyPress={(e) => { \r\n        if (chatState) handleKeyPress(e)\r\n      }}\r\n        className={`flex height100 col3-chat-con ${\r\n          chatState ? \"chatstate\" : \"settingsstate\"\r\n        }`}\r\n      >\r\n        <section className=\"flex chat-con-top\">\r\n          <div className=\"flex top-userinfo\">\r\n            <StyledSection\r\n              color={activeChatroom.theme}\r\n              className=\"userinfo-avatar\"\r\n            ></StyledSection>\r\n            <div className=\"top-userinfo-chatroom-name\">\r\n              {activeChatroom.name}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex top-settings\">\r\n            <div\r\n              onClick={() => {\r\n                setChatState(!chatState);\r\n              }}\r\n              className=\"userinfo-avatar\"\r\n            >\r\n              <If condition={!chatState}>\r\n                <i class=\"fas fa-times\"></i>\r\n              </If>\r\n              <If condition={chatState}>\r\n                <i class=\"fas fa-ellipsis-v\"></i>\r\n              </If>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <If condition={!chatState}>\r\n          <section className=\"chat-con-mid\">\r\n            <HomeCol3ChatSettings\r\n              ws={ws}\r\n              user={user}\r\n              room={activeChatroom}\r\n              activeChatroom={activeChatroom}\r\n              setActiveChatroom={setActiveChatroom}\r\n              setChatroomUpdated={setChatroomUpdated}\r\n              setChatState={setChatState}\r\n              setHomeCol3State={setHomeCol3State}\r\n            />\r\n          </section>\r\n        </If>\r\n\r\n        <If condition={chatState}>\r\n          \r\n          <section className={`chat-con-mid`} onScroll={(e) => handleScroll(e.target)}>\r\n          <If condition={showGoBotArrow}>\r\n            <div\r\n              onClick={() => {\r\n                document.querySelector(`.chat-con-mid`).scrollTop =\r\n                  document.querySelector(`.chat-con-mid`).scrollHeight;\r\n              }}\r\n              className=\"arr-con\"\r\n            >\r\n              <i class=\"fas fa-arrow-down\"></i>\r\n            </div>\r\n            </If>\r\n            <If condition={chatroomMessages && chatroomMessages.length > 0}>\r\n              {chatroomMessages.map((m, i) => {\r\n                return (\r\n                  <Message\r\n                    m={m}\r\n                    user={user}\r\n                    chatroomUsers={chatroomUsers}\r\n                    msgAva={msgAva}\r\n                    ws={ws}\r\n                    newReaction={newReaction}\r\n                    setNewReaction={setNewReaction}\r\n                    usersOnline={usersOnline}\r\n                  />\r\n                );\r\n              })}\r\n            </If>\r\n            <If condition={membersTyping.length > 0}>\r\n              {membersTyping.map((m, i) => {\r\n                return (\r\n                  <div className=\"flex istyping-con\">\r\n                    <div className=\"flex\">\r\n                      <StyledDiv\r\n                        img={m.userAva}\r\n                        className=\"istyping-avatar\"\r\n                      ></StyledDiv>\r\n                      {m.userName}\r\n                    </div>{\" \"}\r\n                    <If condition={i === membersTyping.length - 1}>\r\n                      <span> is typing...</span>\r\n                    </If>\r\n                  </div>\r\n                );\r\n              })}\r\n            </If>\r\n          </section>\r\n          <section className=\"flex chat-con-bot\">\r\n            <div className=\"con-bot-con-message\">\r\n              <input\r\n                placeholder=\"write message\"\r\n                value={inputMessage}\r\n                onChange={(e) => {\r\n                  setInputMessage(e.target.value);\r\n                  if (e.target.value.length > 0 && !isTyping) {\r\n                    setIsTyping(true);\r\n                  } else if (e.target.value.length < 1 && isTyping) {\r\n                    setIsTyping(false);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <button\r\n             className=\"send-btn\"\r\n              type=\"button\"\r\n              // onKeyPress={(e) => console.log(e)}\r\n              onClick={() => {\r\n                if (inputMessage !== \"\") sendMessage();\r\n              }}\r\n            >\r\n              <i className=\"fas fa-paper-plane\"></i>\r\n            </button>\r\n          </section>\r\n        </If>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Message = ({\r\n  ws,\r\n  m,\r\n  user,\r\n  chatroomUsers,\r\n  msgAva,\r\n  newReaction,\r\n  usersOnline,\r\n}) => {\r\n  // states\r\n  const [showMessageDetails, setShowMessageDetails] = useState(null);\r\n  const [mesReactions, setMesReactions] = useState([]);\r\n  const [showReactions, setShowReactions] = useState(false);\r\n\r\n  // fetches\r\n  const fetchPostMsgReaction = async (payload) => {\r\n    let res = await post(`/protected/post-messagereaction`, payload);\r\n\r\n    if (ws && ws.readyState === 1)\r\n      ws.send(\r\n        JSON.stringify({\r\n          type: \"reaction\",\r\n          detail: \"create\",\r\n          reacter: payload.userId,\r\n          reaction: payload.reaction,\r\n          chatroom: payload.message.chatroom,\r\n\r\n          messageId: payload.message._id,\r\n          message: payload.message,\r\n        })\r\n      );\r\n  };\r\n\r\n  const fetchDeleteMsgReaction = async (payload) => {\r\n    const abortController = new AbortController();\r\n    let res = await get(\r\n      `/protected/delete-messagereaction/${payload.message._id}/${payload.reactionId}`,\r\n      abortController.signal\r\n    );\r\n\r\n    if (ws && ws.readyState === 1)\r\n      ws.send(\r\n        JSON.stringify({\r\n          type: \"reaction\",\r\n          detail: \"delete\",\r\n          reactionId: payload.reactionId,\r\n          chatroom: payload.message.chatroom,\r\n          messageId: payload.message._id,\r\n        })\r\n      );\r\n    return () => abortController.abort();\r\n  };\r\n\r\n  // useEffects\r\n  useEffect(async () => {\r\n    if (!newReaction) {\r\n      setMesReactions(m.reactions);\r\n    } else if (newReaction.messageId === m._id) {\r\n      switch (newReaction.detail) {\r\n        case \"create\":\r\n          setMesReactions([\r\n            ...mesReactions,\r\n            {\r\n              reacter: newReaction.reacter,\r\n              reaction: newReaction.reaction,\r\n            },\r\n          ]);\r\n          break;\r\n\r\n        case \"delete\":\r\n          setMesReactions(\r\n            mesReactions.filter((r) => r._id !== newReaction.reactionId)\r\n          );\r\n          break;\r\n      }\r\n    }\r\n  }, [newReaction]);\r\n\r\n  return (\r\n    <>\r\n      <If condition={m.msgType === \"userUpdate\"}>\r\n        <div className=\"flex userupdate-msg\">\r\n          <StyledDiv\r\n            img={m.sender.avatar}\r\n            className=\"userupdate-msg-ava\"\r\n          ></StyledDiv>\r\n          <i>{m.text}</i>\r\n        </div>\r\n      </If>\r\n\r\n      <If condition={m.msgType === \"message\"}>\r\n        <div\r\n          className={`flex ${\r\n            m.sender._id === user._id ? \"message-right\" : \"message-left\"\r\n          } ${showReactions ? \"active\" : \"\"} ${\r\n            !msgAva.includes(m) ? \"noava\" : \"\"\r\n          } ${mesReactions.length > 0 ? \"reac\" : \"\"}`}\r\n        >\r\n          <section className={`flex reactions-con`}>\r\n            <If condition={m.sender._id === user._id}>\r\n              <If\r\n                condition={\r\n                  !showReactions &&\r\n                  !mesReactions.some((r) => r.reacter === user._id)\r\n                }\r\n              >\r\n                <div\r\n                  className=\"reactions-con-showadd\"\r\n                  onClick={() => setShowReactions(true)}\r\n                >\r\n                  <i class=\"fas fa-plus\"></i>\r\n                </div>\r\n              </If>\r\n              <If condition={showReactions}>\r\n                <Reactions\r\n                  fetchPostMsgReaction={fetchPostMsgReaction}\r\n                  m={m}\r\n                  user={user}\r\n                  showReactions={showReactions}\r\n                  setShowReactions={setShowReactions}\r\n                />\r\n              </If>\r\n              <div className=\"flex reactions-added-con\">\r\n                {mesReactions.map((r) => {\r\n                  console.log(r);\r\n                  return (\r\n                    <>\r\n                      <i className={r.reaction}></i>\r\n                      <If condition={r.reacter === user._id}>\r\n                        <span\r\n                          onClick={() => {\r\n                            fetchDeleteMsgReaction({\r\n                              message: m,\r\n                              reactionId: r._id,\r\n                            });\r\n                          }}\r\n                        ></span>\r\n                      </If>\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n            </If>\r\n            <div\r\n              className={`flex message-wrapper`}\r\n              onClick={() =>\r\n                showMessageDetails\r\n                  ? showMessageDetails === m\r\n                    ? setShowMessageDetails(null)\r\n                    : setShowMessageDetails(m)\r\n                  : setShowMessageDetails(m)\r\n              }\r\n            >\r\n              <If condition={m.sender._id !== user._id && msgAva.includes(m)}>\r\n                <StyledDiv img={m.sender.avatar} className=\"message-avatar\">\r\n                  <div className=\"onlinestatus-con\">\r\n                    <StyledSpan\r\n                      color={\r\n                        usersOnline.filter((user) => user._id === m.sender._id)\r\n                          .length > 0\r\n                          ? \"#A2DC68\"\r\n                          : \"#FF997D\"\r\n                      }\r\n                      className=\"user-con-onlinestatus\"\r\n                    ></StyledSpan>\r\n                  </div>\r\n                </StyledDiv>\r\n              </If>\r\n\r\n              <div className=\"message-text\">{m.text}</div>\r\n              <If condition={m.sender._id === user._id && msgAva.includes(m)}>\r\n                <StyledDiv img={m.sender.avatar} className=\"message-avatar\">\r\n                  <div className=\"onlinestatus-con\">\r\n                    <StyledSpan\r\n                      color={\r\n                        usersOnline.filter((user) => user._id === m.sender._id)\r\n                          .length > 0\r\n                          ? \"#A2DC68\"\r\n                          : \"#FF997D\"\r\n                      }\r\n                      className=\"user-con-onlinestatus\"\r\n                    ></StyledSpan>\r\n                  </div>\r\n                </StyledDiv>\r\n              </If>\r\n            </div>\r\n            <If condition={m.sender._id !== user._id}>\r\n              <If\r\n                condition={\r\n                  !showReactions &&\r\n                  !mesReactions.some((r) => r.reacter === user._id)\r\n                }\r\n              >\r\n                <div\r\n                  className=\"reactions-con-showadd\"\r\n                  onClick={() => setShowReactions(true)}\r\n                >\r\n                  <i class=\"fas fa-plus\"></i>\r\n                </div>\r\n              </If>\r\n              <If condition={showReactions}>\r\n                <Reactions\r\n                  fetchPostMsgReaction={fetchPostMsgReaction}\r\n                  m={m}\r\n                  user={user}\r\n                  showReactions={showReactions}\r\n                  setShowReactions={setShowReactions}\r\n                />\r\n              </If>\r\n              <div className=\"flex reactions-added-con\">\r\n                {mesReactions.map((r) => {\r\n                  console.log(r);\r\n                  return (\r\n                    <>\r\n                      <i className={r.reaction}></i>\r\n                      <If condition={r.reacter === user._id}>\r\n                        <span\r\n                          onClick={() => {\r\n                            fetchDeleteMsgReaction({\r\n                              message: m,\r\n                              reactionId: r._id,\r\n                            });\r\n                          }}\r\n                        ></span>\r\n                      </If>\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n            </If>\r\n          </section>\r\n          <If condition={showMessageDetails === m}>\r\n            <div className=\"msg-details-name\">\r\n              {/* Sent by: {chatroomUsers.filter((u) => u._id === m.sender)[0].name} */}\r\n              Sent by: {m.sender.name}\r\n            </div>\r\n            <div className=\"msg-details-time\">{m.time}</div>\r\n          </If>\r\n        </div>\r\n      </If>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Reactions = ({\r\n  fetchPostMsgReaction,\r\n  m,\r\n  user,\r\n  showReactions,\r\n  setShowReactions,\r\n}) => {\r\n  return (\r\n    <div className={`flex reactions-add-con`}>\r\n      <div\r\n        onClick={() => {\r\n          fetchPostMsgReaction({\r\n            reaction: \"fas fa-thumbs-up\",\r\n            message: m,\r\n            userId: user._id,\r\n          });\r\n          setShowReactions(false);\r\n        }}\r\n      >\r\n        {/* thumbsup */}\r\n        <i className=\"fas fa-thumbs-up\"></i>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          fetchPostMsgReaction({\r\n            reaction: \"far fa-grin\",\r\n            message: m,\r\n            userId: user._id,\r\n          });\r\n          setShowReactions(false);\r\n        }}\r\n      >\r\n        {/* happy */}\r\n        <i className=\"far fa-grin\"></i>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          fetchPostMsgReaction({\r\n            reaction: \"far fa-grin-squint-tears\",\r\n            message: m,\r\n            userId: user._id,\r\n          });\r\n          setShowReactions(false);\r\n        }}\r\n      >\r\n        {/* laugh */}\r\n        <i className=\"far fa-grin-squint-tears\"></i>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          fetchPostMsgReaction({\r\n            reaction: \"far fa-angry\",\r\n            message: m,\r\n            userId: user._id,\r\n          });\r\n          setShowReactions(false);\r\n        }}\r\n      >\r\n        {/* angry */}\r\n        <i className=\"far fa-angry\"></i>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          fetchPostMsgReaction({\r\n            reaction: \"far fa-frown\",\r\n            message: m,\r\n            userId: user._id,\r\n          });\r\n          setShowReactions(false);\r\n        }}\r\n      >\r\n        {/* sad */}\r\n        <i className=\"far fa-frown\"></i>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          fetchPostMsgReaction({\r\n            reaction: \"fas fa-thumbs-down\",\r\n            message: m,\r\n            userId: user._id,\r\n          });\r\n          setShowReactions(false);\r\n        }}\r\n      >\r\n        {/* thumbsdown */}\r\n        <i className=\"fas fa-thumbs-down\"></i>\r\n      </div>\r\n\r\n      <div onClick={() => setShowReactions(false)}>\r\n        <i className=\"fas fa-times\"></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { post, get } from \"../../../../utils/http\";\r\nimport { If } from \"../../../../utils/If\";\r\n\r\nexport const HomeCol3CreateChatroom = ({\r\n  homeCol3State,\r\n  user,\r\n  ws,\r\n  setChatroomUpdated,\r\n}) => {\r\n  // states\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [newRoomName, setNewRoomName] = useState(\"\");\r\n  const [newRoomTheme, setNewRoomTheme] = useState(\"#FA0000\");\r\n  const [newRoomAdmins, setNewRoomAdmins] = useState([user._id]);\r\n  const [newRoomMembers, setNewRoomMembers] = useState([user]);\r\n  // const [newRoomMembers, setNewRoomMembers] = useState([user._id]);\r\n  // const [addableUsers, setAddableUsers] = useState([]);\r\n  const [notRoomMembers, setNotRoomMembers] = useState([]);\r\n  const [searchUsersInput, setSearchUsersInput] = useState(\"\");\r\n\r\n  const [createMessage, setCreateMessage] = useState(null);\r\n\r\n  // fetches\r\n  const fetchAllUsers = async (signal) => {\r\n    let res = await get(`/protected/get-all-users`, signal);\r\n    setNotRoomMembers(res.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchCreateChatroom = async () => {\r\n    let res = await post(`/protected/create-chatroom`, {\r\n      name: newRoomName,\r\n      admins: newRoomAdmins,\r\n      members: newRoomMembers,\r\n      theme: newRoomTheme,\r\n    });\r\n    if (res.success) {\r\n      setCreateMessage(res.message);\r\n      setNewRoomName(\"\");\r\n      setNewRoomTheme(\"#FA0000\");\r\n      setNewRoomMembers([user]);\r\n      setNewRoomAdmins([user._id]);\r\n      // setAddableUsers([]);\r\n      setNotRoomMembers([]);\r\n      setSearchUsersInput(\"\");\r\n\r\n      ws.send(\r\n        JSON.stringify({\r\n          type: \"chatroomCreate\",\r\n          detail: \"chatroomCreate\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (createMessage) setTimeout(() => setCreateMessage(null), 4000);\r\n  }, [createMessage]);\r\n\r\n  useEffect(async () => {\r\n    const abortController = new AbortController();\r\n    await fetchAllUsers(abortController.signal);\r\n    return () => abortController.abort();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    <h4>loading ...</h4>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"flex height100 col3-chat-con\">\r\n      <section className=\"dashboard-con-create-con\">\r\n        <div className=\"flex create-con-top\">\r\n          <h3>Create chatroom</h3>\r\n        </div>\r\n\r\n        <div className=\"create-con-name\">\r\n          <label htmlFor=\"\" className=\"create-con-text\">\r\n            Name:\r\n          </label>\r\n\r\n          <input\r\n            className=\"create-con-input-text\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={newRoomName}\r\n            onChange={(e) => setNewRoomName(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex create-con-theme-color\">\r\n          <input type=\"text\" name=\"theme\" value={newRoomTheme} hidden />\r\n          <div className=\"create-con-text\">Color:</div>\r\n          <div className=\"flex create-con-default-colors\">\r\n            <div\r\n              className=\"create-con-green\"\r\n              onClick={() => setNewRoomTheme(\"#A2DC68\")}\r\n            ></div>\r\n            <div\r\n              className=\"create-con-blue\"\r\n              onClick={() => setNewRoomTheme(\"#68DCC4\")}\r\n            ></div>\r\n            <div\r\n              className=\"create-con-purple\"\r\n              onClick={() => setNewRoomTheme(\"#DC68D0\")}\r\n            ></div>\r\n            <div\r\n              className=\"create-con-yellow\"\r\n              onClick={() => setNewRoomTheme(\"#D8DC68\")}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex create-con-pick-color\">\r\n          <div className=\"create-con-text\">Pick your own:</div>\r\n          <input\r\n            className=\"create-con-color-picker\"\r\n            type=\"color\"\r\n            onChange={(e) => setNewRoomTheme(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"chat-settings-text\">Members:</div>\r\n        <div className=\"flex chat-settings-members-container\">\r\n          {newRoomMembers.map((m, i) => {\r\n            return (\r\n              // <div>\r\n              //   <div className=\"flex chat-settings-current-members\">\r\n              //     <div className=\"current-members\">{m.name}</div>\r\n              //     <If condition={newRoomAdmins.includes(m._id)}>\r\n              //       <span>A</span>\r\n              //     </If>\r\n              //   </div>\r\n              // </div>\r\n              <div className=\"amem-con\">\r\n                <div className=\"flex chat-settings-current-members\">\r\n                  <div className=\"current-members\">{m.name} </div>\r\n                  <If condition={newRoomAdmins.includes(m._id)}>\r\n                    <span>A</span>\r\n                  </If>\r\n                </div>\r\n                <If condition={m._id !== user._id}>\r\n                  <If condition={!newRoomAdmins.includes(m._id)}>\r\n                    <div\r\n                      className=\"chat-settings-make-admin\"\r\n                      onClick={() =>\r\n                        setNewRoomAdmins((prev) => {\r\n                          return [...prev, m._id];\r\n                        })\r\n                      }\r\n                    >\r\n                      adminize\r\n                    </div>\r\n                  </If>\r\n                  <div\r\n                    className=\"chat-settings-kick\"\r\n                    onClick={() => {\r\n                      let newArr = newRoomMembers.filter(\r\n                        (me) => me._id !== m._id\r\n                      );\r\n                      setNewRoomMembers(newArr);\r\n                      let newArr2 = notRoomMembers;\r\n                      if (!newArr2.includes(m)) newArr2.push(m);\r\n                      setNotRoomMembers(newArr2);\r\n\r\n                      let newArr3 = newRoomAdmins.filter((me) => me !== m._id);\r\n                      setNewRoomAdmins(newArr3);\r\n                    }}\r\n                  >\r\n                    kick\r\n                  </div>\r\n                </If>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"create-con-add-user\">\r\n          <label className=\"create-con-text\" htmlFor=\"\">\r\n            Add members:\r\n          </label>\r\n          <input\r\n            className=\"create-con-input-text\"\r\n            type=\"text\"\r\n            placeholder=\"search user\"\r\n            value={searchUsersInput}\r\n            onChange={(e) => setSearchUsersInput(e.target.value)}\r\n          />\r\n          <div className=\"flex add-user-user-container\">\r\n            <If condition={searchUsersInput !== \"\"}>\r\n              {notRoomMembers.map((m) => {\r\n                return (\r\n                  <If\r\n                    condition={\r\n                      m.name.includes(searchUsersInput) &&\r\n                      !newRoomMembers.includes(m) &&\r\n                      m._id !== user._id\r\n                    }\r\n                  >\r\n                    <span\r\n                      className=\"chat-settings-add-member-user\"\r\n                      onClick={() =>\r\n                        setNewRoomMembers((prev) => {\r\n                          return [...prev, m];\r\n                        })\r\n                      }\r\n                    >\r\n                      {m.name}\r\n                    </span>\r\n                  </If>\r\n                );\r\n              })}\r\n            </If>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"create-con-button-create\"\r\n          onClick={() => fetchCreateChatroom()}\r\n        >\r\n          CREATE\r\n        </button>\r\n        <If condition={createMessage}>\r\n          <div>{createMessage} <i className=\"fas fa-check\"></i></div>\r\n        </If>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n","// ws: 1. new message. update if userChatrooms includes user.\r\n// ws: 2. member leaves room. update if activechatroom === leaved room.\r\n// ws: 3. user joins room. update if activechatroom === joined room.\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nimport { HomeCol2 } from \"./home/HomeCol2\";\r\nimport { HomeCol3Chat } from \"./home/HomeCol3Chat\";\r\nimport { HomeCol3CreateChatroom } from \"./home/HomeCol3CreateChatroom\";\r\n\r\nimport { breakpoints } from \"../../../utils/breakpoints\";\r\nimport { If } from \"../../../utils/If\";\r\nimport { getDateAndTime } from \"../../../utils/getDate&Time\";\r\n\r\nexport const NavHome = ({\r\n  ws,\r\n  user,\r\n  userChatrooms,\r\n  notUserChatrooms,\r\n  usersOnline,\r\n  setUsersOnline,\r\n  setChatroomUpdated,\r\n}) => {\r\n  // states\r\n  const [W, setW] = useState(window.innerWidth);\r\n\r\n  const [homeCol3State, setHomeCol3State] = useState(\"createChatroom\");\r\n  const [chatroomLastMessage, setChatroomLastMessage] = useState(null);\r\n  const [chatroomUnreadMsgs, setChatroomUnreadMsgs] = useState(null);\r\n  const [activeChatroom, setActiveChatroom] = useState(false);\r\n  const [chatroomMessages, setChatroomMessages] = useState([]);\r\n  const [newReaction, setNewReaction] = useState(null);\r\n  const [membersTyping, setMembersTyping] = useState([]);\r\n\r\n  const [mobileCol2Chatrooms, setMobileCol2Chatrooms] = useState(true);\r\n\r\n  //   useEffects\r\n  useEffect(async () => {\r\n    if (ws) {\r\n      ws.onmessage = async (e) => {\r\n        let data = JSON.parse(e.data);\r\n        console.log(data);\r\n\r\n        switch (data.type) {\r\n          case \"usersOnline\":\r\n            setUsersOnline(data.users);\r\n            break;\r\n\r\n          case \"isTyping\":\r\n            if (data.chatroom === activeChatroom._id)\r\n              if (data.user._id !== user._id)\r\n                if (data.detail) {\r\n                  setMembersTyping([\r\n                    ...membersTyping,\r\n                    {\r\n                      userName: data.user.name,\r\n                      userAva: data.user.avatar,\r\n                      userId: data.user._id,\r\n                    },\r\n                  ]);\r\n                  document.querySelector(`.chat-con-mid`).scrollTop =\r\n                    document.querySelector(`.chat-con-mid`).scrollHeight;\r\n                } else {\r\n                  setMembersTyping(\r\n                    membersTyping.filter((m) => m.userId !== data.user._id)\r\n                  );\r\n                }\r\n            break;\r\n\r\n          case \"reaction\":\r\n            if (data.chatroom === activeChatroom._id) {\r\n              setNewReaction(data);\r\n            }\r\n            break;\r\n\r\n          case \"message\":\r\n            if (activeChatroom && data.chatroom === activeChatroom._id) {\r\n              if (data.detail === \"userLeft\" && user._id === data.sender._id) {\r\n                return;\r\n              } else {\r\n                setChatroomMessages([...chatroomMessages, data]);\r\n                document.querySelector(`.chat-con-mid`).scrollTop =\r\n                  document.querySelector(`.chat-con-mid`).scrollHeight;\r\n              }\r\n            }\r\n            if (\r\n              userChatrooms.filter((room) => room._id === data.chatroom)\r\n                .length > 0\r\n            ) {\r\n              if (data.chatroom !== activeChatroom._id) {\r\n                setChatroomUnreadMsgs({ chatroom: data.chatroom });\r\n              }\r\n              setChatroomLastMessage({ chatroom: data.chatroom });\r\n            }\r\n            break;\r\n\r\n          case \"chatroomUpdate\":\r\n            let chatroomAffected = userChatrooms.filter(\r\n              (ch) => ch._id === data.chatroomId\r\n            );\r\n            if (chatroomAffected[0]) {\r\n              switch (data.detail) {\r\n                case \"userJoined\":\r\n                  ws.send(\r\n                    JSON.stringify({\r\n                      type: \"message\",\r\n                      detail: \"userJoined\",\r\n                      sender: data.user,\r\n                      chatroom: data.chatroomId,\r\n                      reactions: [],\r\n                      text: `${data.user.name} has joined the chat!`,\r\n                      time: getDateAndTime(),\r\n                    })\r\n                  );\r\n                  break;\r\n\r\n                case \"userLeft\":\r\n                  if (data.user._id !== user._id) {\r\n                    ws.send(\r\n                      JSON.stringify({\r\n                        type: \"message\",\r\n                        detail: \"userLeft\",\r\n                        sender: data.user,\r\n                        chatroom: data.chatroomId,\r\n                        reactions: [],\r\n                        text: `${data.user.name} has left the chat!`,\r\n                        time: getDateAndTime(),\r\n                      })\r\n                    );\r\n                  }\r\n                  break;\r\n              }\r\n            }\r\n            break;\r\n\r\n          case \"chatroomCreate\":\r\n            setChatroomUpdated(true);\r\n            break;\r\n\r\n          case \"chatroomDelete\":\r\n            setChatroomUpdated(true);\r\n\r\n            if (data.chatroomId === activeChatroom._id) {\r\n              setHomeCol3State(\"createChatroom\");\r\n              setActiveChatroom(null);\r\n            }\r\n            break;\r\n        }\r\n      };\r\n    }\r\n  }, [ws.onmessage]);\r\n\r\n  useEffect(() => {\r\n    let changeW = window.addEventListener(\"resize\", () =>\r\n      setW(window.innerWidth)\r\n    );\r\n    return window.removeEventListener(\"resize\", changeW);\r\n  }, [W]);\r\n\r\n  return (\r\n    <>\r\n      <Col\r\n        lg={{ span: 4, order: 2 }}\r\n        md={{ span: 4, order: 2 }}\r\n        xs={{ span: 12, order: 2 }}\r\n        className=\"dashboard-con-col2\"\r\n      >\r\n        <If\r\n          condition={\r\n            (W < breakpoints.medium && mobileCol2Chatrooms) ||\r\n            W > breakpoints.medium\r\n          }\r\n        >\r\n          <HomeCol2\r\n            ws={ws}\r\n            user={user}\r\n            userChatrooms={userChatrooms}\r\n            notUserChatrooms={notUserChatrooms}\r\n            activeChatroom={activeChatroom}\r\n            setActiveChatroom={setActiveChatroom}\r\n            homeCol3State={homeCol3State}\r\n            setHomeCol3State={setHomeCol3State}\r\n            chatroomLastMessage={chatroomLastMessage}\r\n            setChatroomLastMessage={setChatroomLastMessage}\r\n            chatroomUnreadMsgs={chatroomUnreadMsgs}\r\n            setChatroomUnreadMsgs={setChatroomUnreadMsgs}\r\n            setChatroomUpdated={setChatroomUpdated}\r\n            usersOnline={usersOnline}\r\n            setMobileCol2Chatrooms={setMobileCol2Chatrooms}\r\n          />\r\n        </If>\r\n\r\n        <If condition={W < breakpoints.medium && !mobileCol2Chatrooms}>\r\n          <If condition={homeCol3State === \"chat\"}>\r\n            <HomeCol3Chat\r\n              ws={ws}\r\n              user={user}\r\n              activeChatroom={activeChatroom}\r\n              setActiveChatroom={setActiveChatroom}\r\n              chatroomMessages={chatroomMessages}\r\n              setChatroomMessages={setChatroomMessages}\r\n              newReaction={newReaction}\r\n              setNewReaction={setNewReaction}\r\n              membersTyping={membersTyping}\r\n              usersOnline={usersOnline}\r\n              setChatroomUpdated={setChatroomUpdated}\r\n              setHomeCol3State={setHomeCol3State}\r\n            />\r\n          </If>\r\n          <If condition={homeCol3State === \"createChatroom\"}>\r\n            <HomeCol3CreateChatroom\r\n              ws={ws}\r\n              user={user}\r\n              homeCol3State={homeCol3State}\r\n            />\r\n          </If>\r\n        </If>\r\n      </Col>\r\n\r\n      <If condition={W > breakpoints.medium}>\r\n        <Col\r\n          lg={{ span: 6, order: 3 }}\r\n          md={{ span: 6, order: 3 }}\r\n          xs={{ span: 12, order: 3 }}\r\n          className=\"dashboard-con-col3\"\r\n        >\r\n          <If condition={homeCol3State === \"chat\"}>\r\n            <HomeCol3Chat\r\n              ws={ws}\r\n              user={user}\r\n              activeChatroom={activeChatroom}\r\n              setActiveChatroom={setActiveChatroom}\r\n              chatroomMessages={chatroomMessages}\r\n              setChatroomMessages={setChatroomMessages}\r\n              newReaction={newReaction}\r\n              setNewReaction={setNewReaction}\r\n              membersTyping={membersTyping}\r\n              usersOnline={usersOnline}\r\n              setChatroomUpdated={setChatroomUpdated}\r\n              setHomeCol3State={setHomeCol3State}\r\n            />\r\n          </If>\r\n          <If condition={homeCol3State === \"createChatroom\"}>\r\n            <HomeCol3CreateChatroom\r\n              ws={ws}\r\n              user={user}\r\n              homeCol3State={homeCol3State}\r\n              setChatroomUpdated={setChatroomUpdated}\r\n            />\r\n          </If>\r\n        </Col>\r\n      </If>\r\n    </>\r\n  );\r\n};\r\n","// unread adds, even if offline\r\n\r\n// style: active chatroom home col2. gobot and byt butn. messagedetails. res.messages.\r\n\r\n// style: not so much whitespace on col3 create room. also, style addable users.\r\n\r\n// allmänt: change avavtar in mobile view.\r\n// style: nav text overflows into col2\r\n// style: colorpick in col3 overflows\r\n\r\n// style: mobile view: navhome: hamburgerNav. padding on col2. user avatar not there.\r\n// style: mobile view: navhome: col3Chat; whole chat needs style.\r\n\r\n// style: navSettings: Col3: 2much whitespace. also overflows\r\n\r\n// allmänt: style: reactions\r\n\r\n// allmänt: navSettings: mobile view: nav usersettings & roomsettings.\r\n// style: ResMessages style\r\n// style: loading... style\r\n// style: isTyping... style\r\n\r\n// style: goBot button.\r\n// style: msg height === avatar height = notgood.\r\n\r\n// style: onlineUser\r\n\r\n// style: col1 main avatar\r\n\r\n// import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\n\r\nimport { Nav } from \"./dashboard-comps/Nav\";\r\nimport { UserAvatar } from \"./dashboard-comps/UserAvatar\";\r\nimport { NavSettings } from \"./dashboard-comps/NavSettings\";\r\nimport { NavHome } from \"./dashboard-comps/NavHome\";\r\n\r\nimport { ws_address, get } from \"../../utils/http\";\r\nimport { breakpoints } from \"../../utils/breakpoints\";\r\nimport { If } from \"../../utils/If\";\r\n\r\nexport const PageDashboard = () => {\r\n  // states\r\n  const [loading, setLoading] = useState(true);\r\n  const [W, setW] = useState(window.innerWidth);\r\n  const [ws, setWs] = useState(null);\r\n\r\n  const [userUpdated, setUserUpdated] = useState(false);\r\n  const [chatroomUpdated, setChatroomUpdated] = useState(false);\r\n\r\n  const [user, setUser] = useState(null);\r\n  const [userChatrooms, setUserChatrooms] = useState(null);\r\n  const [notUserChatrooms, setNotUserChatrooms] = useState(null);\r\n  const [usersOnline, setUsersOnline] = useState([]);\r\n  const [navState, setNavState] = useState(\"home\");\r\n\r\n  // fetches\r\n  const fetchUserAndChatrooms = async (signal) => {\r\n    let res = await get(`/protected/get-user`, signal);\r\n    setUser(res.data);\r\n    let userID = res.data._id;\r\n    // await fetchUser(signal);\r\n    let res2 = await get(`/protected/get-all-chatrooms`, signal);\r\n    setUserChatrooms(\r\n      res2.data\r\n        .filter((chat) => chat.members.includes(userID))\r\n        .sort((chatA, chatB) => {\r\n          return (\r\n            chatB.starmarked.includes(userID) -\r\n            chatA.starmarked.includes(userID)\r\n          );\r\n        })\r\n    );\r\n    setNotUserChatrooms(\r\n      res2.data.filter((chat) => !chat.members.includes(userID))\r\n    );\r\n    // return fetchChatrooms(signal, res.data._id);\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchUser = async (signal) => {\r\n    let res = await get(`/protected/get-user`, signal);\r\n    setUser(res.data);\r\n    setUserUpdated(false);\r\n  };\r\n\r\n  const fetchChatrooms = async (signal, userID) => {\r\n    let res = await get(`/protected/get-all-chatrooms`, signal);\r\n    setUserChatrooms(\r\n      res.data\r\n        .filter((chat) => chat.members.includes(userID))\r\n        .sort((chatA, chatB) => {\r\n          return (\r\n            chatB.starmarked.includes(userID) -\r\n            chatA.starmarked.includes(userID)\r\n          );\r\n        })\r\n    );\r\n    setNotUserChatrooms(\r\n      res.data.filter((chat) => !chat.members.includes(userID))\r\n    );\r\n    setChatroomUpdated(false);\r\n  };\r\n\r\n  // useEffects\r\n  useEffect(async () => {\r\n    if (userUpdated) {\r\n      const abortController = new AbortController();\r\n      await fetchUser(abortController.signal);\r\n      return () => abortController.abort();\r\n    }\r\n  }, [userUpdated]);\r\n\r\n  useEffect(async () => {\r\n    if (chatroomUpdated) {\r\n      const abortController = new AbortController();\r\n      await fetchChatrooms(abortController.signal, user._id);\r\n      return () => abortController.abort();\r\n    }\r\n  }, [chatroomUpdated]);\r\n\r\n  // useEffect(async () => {\r\n  //   const abortController = new AbortController();\r\n  //   await fetchChatrooms(abortController.signal);\r\n  //   return () => abortController.abort();\r\n  // }, []);\r\n\r\n  useEffect(async () => {\r\n    const abortController = new AbortController();\r\n    await fetchUserAndChatrooms(abortController.signal);\r\n    return () => abortController.abort();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let changeW = window.addEventListener(\"resize\", () =>\r\n      setW(window.innerWidth)\r\n    );\r\n    return window.removeEventListener(\"resize\", changeW);\r\n  }, [W]);\r\n\r\n  useEffect(() => {\r\n    // if (!ws) setWs(new WebSocket(\"ws://localhost:5002\"));\r\n    // if (!ws) setWs(new WebSocket(\"wss://chatwskul.herokuapp.com\"));\r\n    if (!ws && !loading)\r\n      setWs(new WebSocket(ws_address + \"?userId=\" + user._id));\r\n    if (ws) {\r\n      ws.onopen = () => {\r\n        console.log(\"WebSocket Connected\");\r\n      };\r\n\r\n      ws.onclose = () => {\r\n        console.log(\"WebSocket Gone\");\r\n      };\r\n\r\n      ws.onmessage = async (e) => {\r\n        let data = JSON.parse(e.data);\r\n        console.log(data);\r\n        if (data === \"ah ah ah stay alive!\") {\r\n          return;\r\n        }\r\n\r\n        if (data.type === \"usersOnline\") {\r\n          console.log(\"online\");\r\n          console.log(data);\r\n          setUsersOnline(data.users);\r\n        }\r\n      };\r\n    }\r\n    return () => {\r\n      if (ws) ws.close();\r\n    };\r\n  }, [ws, loading]);\r\n\r\n  if (loading || !user || !ws) {\r\n    return <h2 className=\"\">Loading...</h2>;\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      className={`page page-dashboard ${\r\n        W < breakpoints.medium\r\n          ? \"page-dashboard-mobile\"\r\n          : \"page-dashboard-desktop\"\r\n      }`}\r\n    >\r\n      <Row className=\"dashboard-con\">\r\n        <Col\r\n          lg={{ span: 2, order: 1 }}\r\n          md={{ span: 2, order: 1 }}\r\n          xs={{ span: 12, order: 1 }}\r\n          className=\"flex dashboard-con-col1\"\r\n        >\r\n          <UserAvatar user={user} />\r\n          <Nav navState={navState} setNavState={setNavState} />\r\n        </Col>\r\n        <If condition={navState === \"home\"}>\r\n          <NavHome\r\n            ws={ws}\r\n            user={user}\r\n            userChatrooms={userChatrooms}\r\n            notUserChatrooms={notUserChatrooms}\r\n            usersOnline={usersOnline}\r\n            setUsersOnline={setUsersOnline}\r\n            setChatroomUpdated={setChatroomUpdated}\r\n          />\r\n        </If>\r\n        <If condition={navState === \"settings\"}>\r\n          <NavSettings\r\n            ws={ws}\r\n            user={user}\r\n            userChatrooms={userChatrooms}\r\n            setUserUpdated={setUserUpdated}\r\n            setChatroomUpdated={setChatroomUpdated}\r\n          />\r\n        </If>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","import { BrowserRouter, Switch } from \"react-router-dom\";\r\nimport { GuardProvider, GuardedRoute } from \"react-router-guards\";\r\n\r\nimport { PageHome } from \"./components/main-pages/PageHome\";\r\nimport { PageDashboard } from \"./components/main-pages/PageDashboard\";\r\nimport { Test } from \"./components/Test\";\r\nimport { get } from \"./utils/http\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style/temp.scss\";\r\n\r\nconst requireLogin = async (to, from, next) => {\r\n  const res = await get(\"/logged-in\");\r\n\r\n  if (to.meta.auth === undefined) return next();\r\n  if (to.meta.auth && !res.data) return next.redirect(\"/\");\r\n  if (!to.meta.auth && res.data) return next.redirect(\"/dashboard\");\r\n\r\n  return next();\r\n};\r\n\r\nconst Loading = () => {\r\n  return <p>Loading...</p>;\r\n};\r\n\r\nconst NotFound = () => {\r\n  return <p>Not Found</p>;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <GuardProvider\r\n          guards={[requireLogin]}\r\n          loading={Loading}\r\n          error={NotFound}\r\n        >\r\n          <Switch>\r\n            <GuardedRoute\r\n              path=\"/\"\r\n              exact\r\n              component={PageHome}\r\n              meta={{ auth: false }}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/dashboard\"\r\n              exact\r\n              component={PageDashboard}\r\n              meta={{ auth: true }}\r\n            />\r\n            <GuardedRoute path=\"*\" component={NotFound} />\r\n          </Switch>\r\n        </GuardProvider>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { client_address } from \"../src/utils/http\";\r\n\r\nReactDOM.render(\r\n  // <Auth0Provider\r\n  //   domain=\"dev-p2j2vhsk.eu.auth0.com\"\r\n  //   clientId=\"2wJquhgDeDOaQKIPbnacTIYdsiJ54ncD\"\r\n  //   redirectUri={window.location.origin}\r\n  // >\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  // </Auth0Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}